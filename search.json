[{"path":[]},{"path":"https://lvaudor.github.io/glitter/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://lvaudor.github.io/glitter/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://lvaudor.github.io/glitter/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://lvaudor.github.io/glitter/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://lvaudor.github.io/glitter/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement lise.vaudor@ens-lyon.fr. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://lvaudor.github.io/glitter/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://lvaudor.github.io/glitter/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://lvaudor.github.io/glitter/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://lvaudor.github.io/glitter/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://lvaudor.github.io/glitter/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://lvaudor.github.io/glitter/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://lvaudor.github.io/glitter/articles/explore.html","id":"a-word-of-caution","dir":"Articles","previous_headings":"","what":"A word of caution","title":"How to explore a new base with glitter","text":"Depending dataset ’re working , queries might just ask much service proceed caution. doubt, add spq_head() query pipeline, ask less time, use spq_count() get sense many results total.","code":""},{"path":"https://lvaudor.github.io/glitter/articles/explore.html","id":"asking-for-a-subset-of-all-triples","dir":"Articles","previous_headings":"","what":"Asking for a subset of all triples","title":"How to explore a new base with glitter","text":"code ’ll ask 10 triples. Note use endpoint argument spq_perform() indicate send query, well request_type argument. can one know whether service needs request_type = \"body-form\"? docs might mention . Trial error. LINDAS’ case run request via https://lindas.admin.ch/sparql/ use browser’s web developer console request tab, can see request sends query body. first query helpful shows can query! results however can … less helpful.","code":"library(\"glitter\")  spq_init() %>%   spq_add(\"?s ?p ?o\") %>%   spq_head(n = 10) %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable()"},{"path":[]},{"path":"https://lvaudor.github.io/glitter/articles/explore.html","id":"find-which-classes-are-declared","dir":"Articles","previous_headings":"Classes","what":"Find which classes are declared","title":"How to explore a new base with glitter","text":"point might think need use prefixes query. prefixes present glitter::usual_prefixes, don’t need anything. ’re , use glitter::spq_prefix(). many classes defined total? query might big service. can query owl classes instead. now still dark service provides.","code":"spq_init() %>%   spq_add(\"?class a rdfs:Class\") %>%   spq_head(n = 10) %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable() spq_init() %>%   spq_add(\"?class a rdfs:Class\") %>%   spq_count() %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) #> # A tibble: 1 × 1 #>       n #>   <int> #> 1  1195 spq_init() %>%   spq_add(\"?class a rdfs:Class\") %>%   spq_head(n = 10) %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable()"},{"path":"https://lvaudor.github.io/glitter/articles/explore.html","id":"which-classes-have-instances","dir":"Articles","previous_headings":"Classes","what":"Which classes have instances?","title":"How to explore a new base with glitter","text":"","code":"spq_init() %>%   spq_add(\"?instance a ?class\") %>%   spq_arrange(class) %>%   spq_head(n = 10) %>%   spq_select(- instance) %>%   spq_select(class, .spq_duplicate = \"distinct\") %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable()"},{"path":"https://lvaudor.github.io/glitter/articles/explore.html","id":"which-classes-have-the-most-instances","dir":"Articles","previous_headings":"Classes","what":"Which classes have the most instances?","title":"How to explore a new base with glitter","text":"case class names quite self explanatory use","code":"spq_init() %>%   spq_add(\"?instance a ?class\") %>%   spq_select(class, .spq_duplicate = \"distinct\")  %>%   spq_count(class, sort = TRUE) %>%   spq_head(20) %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable() spq_init() %>%   spq_add(\"?instance a ?class\") %>%   spq_select(class, .spq_duplicate = \"distinct\")  %>%   spq_label(class) %>%   spq_count(class, class_label, sort = TRUE) %>%   spq_head(20) %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable()"},{"path":[]},{"path":"https://lvaudor.github.io/glitter/articles/explore.html","id":"find-which-properties-are-declared","dir":"Articles","previous_headings":"Properties","what":"Find which properties are declared","title":"How to explore a new base with glitter","text":"Note instead use spq_add(\"?property rdfs:Property\") case returned nothing. many properties defined total? query might big service.","code":"spq_init() %>%   spq_add(\"?property a owl:DatatypeProperty\") %>%   spq_head(n = 10) %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable() spq_init() %>%   spq_add(\"?property a owl:DatatypeProperty\") %>%   spq_count() %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) #> # A tibble: 1 × 1 #>       n #>   <int> #> 1   241"},{"path":"https://lvaudor.github.io/glitter/articles/explore.html","id":"what-properties-are-used","dir":"Articles","previous_headings":"Properties","what":"What properties are used?","title":"How to explore a new base with glitter","text":"","code":"spq_init() %>%   spq_add(\"?s ?property ?o\")  %>%   spq_select(- s, - o) %>%   spq_select(property, .spq_duplicate = \"distinct\") %>%   spq_head(10) %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable()"},{"path":"https://lvaudor.github.io/glitter/articles/explore.html","id":"what-values-does-a-given-property-have","dir":"Articles","previous_headings":"Properties","what":"What values does a given property have?","title":"How to explore a new base with glitter","text":"","code":"spq_init()  %>%   spq_prefix(prefixes = c(\"schema\" = \"http://schema.org/\"))%>%   spq_add(\"?s schema:addressRegion ?value\") %>%   spq_count(value, sort = TRUE) %>%   spq_head(10) %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable()"},{"path":"https://lvaudor.github.io/glitter/articles/explore.html","id":"which-class-use-a-particular-property","dir":"Articles","previous_headings":"","what":"Which class use a particular property?","title":"How to explore a new base with glitter","text":"One properties https://gont.ch/longName. class uses ?","code":"spq_init() %>%   spq_prefix(prefixes = c(\"gont\" = \"https://gont.ch/\")) %>%   spq_add(\"?s gont:longName ?o\") %>%   spq_add(\"?s a ?class\") %>%   spq_select(-o, -s) %>%   spq_select(class, .spq_duplicate = \"distinct\") %>%   spq_head(10) %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable()"},{"path":"https://lvaudor.github.io/glitter/articles/explore.html","id":"what-data-is-stored-about-a-classs-instance","dir":"Articles","previous_headings":"","what":"What data is stored about a class’s instance?","title":"How to explore a new base with glitter","text":"organization, data ? postal address?","code":"spq_init() %>%   spq_prefix(prefixes = c(\"schema\" = \"http://schema.org/\")) %>%   spq_add(\"?s a schema:Organization\") %>%   spq_add(\"?s ?property ?value\") %>%   spq_select(-value, -s, class, .spq_duplicate = \"distinct\") %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable() spq_init() %>%   spq_prefix(prefixes = c(\"schema\" = \"http://schema.org/\")) %>%   spq_add(\"?s a schema:PostalAddress\") %>%   spq_add(\"?s ?property ?value\") %>%   spq_select(-value, -s, class, .spq_duplicate = \"distinct\") %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable()"},{"path":"https://lvaudor.github.io/glitter/articles/explore.html","id":"which-data-or-property-name-includes-a-certain-substring","dir":"Articles","previous_headings":"","what":"Which data or property name includes a certain substring?","title":"How to explore a new base with glitter","text":"","code":"spq_init() %>%   spq_add(\"?s ?p ?o\") %>%   spq_filter(str_detect(o, \"[Hh]ydro\")) %>%   spq_select(-s, .spq_duplicate = \"distinct\") %>%   spq_head(10) %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable()"},{"path":"https://lvaudor.github.io/glitter/articles/explore.html","id":"an-example-query-based-on-what-we-now-know","dir":"Articles","previous_headings":"","what":"An example query based on what we now know","title":"How to explore a new base with glitter","text":"","code":"spq_init() %>%   spq_prefix(prefixes = c(\"schema\" = \"http://schema.org/\")) %>%   spq_add(\"?s a schema:Organization\") %>%   spq_add(\"?s schema:name ?name\") %>%   spq_filter(str_detect(name, \"swiss\")) %>%   spq_head(10) %>%   spq_perform(     endpoint = \"https://ld.admin.ch/query\",      request_type = \"body-form\"   ) %>%   knitr::kable()"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_SyMoGih.html","id":"rechercher-toutes-les-informations-impliquant-lobjet-mathématiques-objet-abstrait","dir":"Articles","previous_headings":"","what":"Rechercher toutes les informations impliquant l’objet “Mathématiques” (Objet abstrait):","title":"glitter for SyMoGIH","text":"la ressource r est associée à l’objet “Mathématiques” (syr: Ab0b213) la ressource r est une partie de et une date standard stDate et un type KUTy KUTy pour étiquette KUTyLabel","code":"tib=spq_init() %>%   spq_prefix(prefixes=c(sym=\"http://symogih.org/ontology/\",                         syr=\"http://symogih.org/resource/\")) %>%    spq_add(\"?r sym:associatesObject syr:AbOb213\") %>%    spq_add(\"?r sym:isComponentOf ?i\") %>%    spq_add(\"?i sym:knowledgeUnitStandardLabel ?stLabel\") %>%    spq_add(\". sym:knowledgeUnitStandardDate ?stDate\") %>%    spq_add(\". sym:hasKnowledgeUnitType ?KUTy\") %>%    spq_label(KUTy, .languages = NULL) %>%    spq_head(n=10) %>%    spq_perform(endpoint=\"http://bhp-publi.ish-lyon.cnrs.fr:8888/sparql\")    knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_SyMoGih.html","id":"structure-de-la-partie-abstraite-de-lontologie","dir":"Articles","previous_headings":"","what":"Structure de la partie abstraite de l’ontologie","title":"glitter for SyMoGIH","text":"","code":"tib=spq_init() %>%   spq_prefix(prefixes=c(sym=\"http://symogih.org/ontology/\",                         syr=\"http://symogih.org/resource/\")) %>%     spq_add(\"?s a ?cl\") %>%    spq_add(\"?s ?p ?o1\") %>%    spq_add(\"?o1 a ?cl1\", .required=FALSE) %>%    spq_group_by(cl, p, cl1) %>%    spq_head(n=10) %>%    spq_summarise(effectif = n(\"*\")) %>%    spq_arrange(desc(effectif)) %>%    spq_perform(endpoint=\"http://bhp-publi.ish-lyon.cnrs.fr:8888/sparql\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_SyMoGih.html","id":"structure-de-la-partie-instanciée-de-lontologie","dir":"Articles","previous_headings":"","what":"Structure de la partie instanciée de l’ontologie","title":"glitter for SyMoGIH","text":"","code":"tib=spq_init() %>%   spq_prefix(prefixes=c(sym=\"http://symogih.org/ontology/\",                         syr=\"http://symogih.org/resource/\")) %>%    spq_add(\"?s sym:hasKnowledgeUnitType ?tyin\") %>%    spq_add(\"?r sym:isComponentOf ?s\") %>%    spq_add(\"?r sym:hasRoleType ?tyro\") %>%    spq_group_by(tyin, tyro) %>%    spq_summarise(effectif = n(\"*\")) %>%    spq_arrange(tyin,tyro,desc(effectif)) %>%    spq_head(n=10) %>%    spq_perform(endpoint=\"http://bhp-publi.ish-lyon.cnrs.fr:8888/sparql\")"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_SyMoGih.html","id":"types-dinformations-et-types-de-rôles-avec-effectifs","dir":"Articles","previous_headings":"","what":"Types d’informations et types de rôles, avec effectifs","title":"glitter for SyMoGIH","text":"","code":"tib=spq_init() %>%    spq_prefix(prefixes=c(sym=\"http://symogih.org/ontology/\",                         syr=\"http://symogih.org/resource/\")) %>%    spq_add(\"?s sym:hasKnowledgeUnitType ?tyin\") %>%    spq_add(\"?r sym:isComponentOf ?s\") %>%    spq_add(\"?r sym:hasRoleType ?tyro\") %>%    spq_group_by(tyin, tyro) %>%    spq_summarise(effectif = n(\"*\")) %>%    spq_arrange(tyin, tyro, effectif) %>%    spq_head(n=10) %>%   spq_perform(endpoint=\"http://bhp-publi.ish-lyon.cnrs.fr:8888/sparql\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_SyMoGih.html","id":"le-parcours-biographique-de-gastonlouis-henry-may-1849---1940","dir":"Articles","previous_headings":"","what":"Le parcours biographique de Gaston,Louis, Henry May (1849 - 1940)","title":"glitter for SyMoGIH","text":"","code":"tib=spq_init() %>%    spq_prefix(prefixes=c(sym=\"http://symogih.org/ontology/\",                         syr=\"http://symogih.org/resource/\")) %>%    spq_add(\"?tyro rdfs:label ?TyRoLabel\") %>%    spq_add(\"?tyin rdfs:label ?TyInLabel\") %>%    spq_add(\"?s ?p syr:Actr56241\") %>%    spq_add(\". sym:isComponentOf ?info\") %>%    spq_add(\". sym:hasRoleType ?tyro\") %>%    spq_add(\"?info sym:knowledgeUnitStandardLabel ?infoStandardLabel\") %>%    spq_add(\". sym:knowledgeUnitStandardDate ?infoStandardDate\") %>%    spq_add(\". sym:hasKnowledgeUnitType ?tyin\") %>%    spq_arrange(infoStandardDate) %>%    spq_head(n=10) %>%    spq_perform(endpoint=\"http://bhp-publi.ish-lyon.cnrs.fr:8888/sparql\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_Wikidata.html","id":"find-items-and-properties-to-build-your-query","dir":"Articles","previous_headings":"","what":"Find items and properties to build your query","title":"glitter for Wikidata","text":"find identifiers items properties interest, can: browse Wikidata use package WikidataR (functions find_item(),find_property()). glitter functions might used start exploring data.","code":""},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_Wikidata.html","id":"example-1-lyon-metro","dir":"Articles","previous_headings":"","what":"Example 1: Lyon Metro","title":"glitter for Wikidata","text":"Imagine interested Wikidata available regarding Lyon Metro network. Let’s try see Wikidata : ’d interested, instance, subway stations part network. ’re looking stations part (“wd:P361”) Lyon metro network (“wd:Q1552”). access information : Notice values yet stations (’s ’re looking ) hence use “?” beginning subject string. also get labels stations, can use argument label: now, get 50 items, stations also types items metro lines. Let’s look item “Place Guichard - Bourse du Travail” (Q59855) know correspond station. Property “wdt:P31” enable us collect stations (“wd:Q928830”) instead parts Lyon Metro network. can enrich refine query incrementally spq_filter() sending (whereas get_triple() shortcut build send simple requests) : use glitter DSL (domain-specific language) bit , making use spq_set() spq_filter() fonction. now get 42 stations part Lyon metro network. wanted get properties associated values stations (instance location (“wdt:P625”)) proceed way: tibble can easily transform Simple feature collection (sfc) : glitter provides functions clean transform “raw” Wikidata tibbles tibbles easier use R. Function transform_wikidata_coords() get coordinates longitude (lng) latitude (lat) based Wikidata WKT formatting spatial coordinates (“Point(lng lat)”). resulting table may used easily (instance) package leaflet:","code":"find_item(\"Metro Lyon\") #>  #>  Wikidata item search #>  #> Number of results:    1  #>  #> Results: #> 1     Lyon Metro (Q1552) - public transportation network in Lyon, France find_property(\"part of\") #>  #>  Wikidata property search #>  #> Number of results:    10  #>  #> Results: #> 1     part of (P361) - object of which the subject is a part (if this subject is already part of object A which is a part of object B, then please only make the subject part of object A), inverse property of \"has part\" (P527, see also \"has parts of the class\" (P2670))  #> 2     parent organization (P749) - parent organization of an organization, opposite of subsidiaries (P355)  #> 3     published in (P1433) - larger work that a given work was published in, like a book, journal or music album  #> 4     constellation (P59) - the area of the celestial sphere of which the subject is a part (from a scientific standpoint, not an astrological one)  #> 5     on focus list of Wikimedia project (P5008) - property to indicate that an item is of particular interest for a Wikimedia project. This property does not add notability. Items should not be created with this property if they are not notable for Wikidata. See also P6104, P972, P2354.  #> 6     part of the series (P179) - series which contains the subject  #> 7     member of sports team (P54) - sports teams or clubs that the subject represents or represented  #> 8     transport network (P16) - network the infrastructure is a part of  #> 9     partially coincident with (P1382) - object that partially overlaps with the subject in its instances, parts, or members  #> 10    diaspora (P3833) - diaspora that a cultural group belongs to stations=get_triple(\"?items wdt:P16 wd:Q1552\") stations %>% head() #> # A tibble: 6 × 1 #>   items                                  #>   <chr>                                  #> 1 http://www.wikidata.org/entity/Q2944   #> 2 http://www.wikidata.org/entity/Q2965   #> 3 http://www.wikidata.org/entity/Q2969   #> 4 http://www.wikidata.org/entity/Q2976   #> 5 http://www.wikidata.org/entity/Q5298   #> 6 http://www.wikidata.org/entity/Q599865 parts_metro_Lyon=get_triple(\"?items wdt:P16 wd:Q1552\", label=\"?items\") parts_metro_Lyon %>% head() #> # A tibble: 6 × 2 #>   items                                  items_label                        #>   <chr>                                  <chr>                              #> 1 http://www.wikidata.org/entity/Q599865 Place Guichard - Bourse du Travail #> 2 http://www.wikidata.org/entity/Q613893 Hôtel de Ville - Louis Pradel      #> 3 http://www.wikidata.org/entity/Q776088 Cordeliers                         #> 4 http://www.wikidata.org/entity/Q2944   Lyon Metro Line A                  #> 5 http://www.wikidata.org/entity/Q2965   Lyon Metro Line B                  #> 6 http://www.wikidata.org/entity/Q2969   Lyon Metro Line C stations_metro_Lyon=spq_init() %>%    spq_add(\"?stations wdt:P361 wd:Q1552\", .label = \"?stations\") %>%    spq_add(\"?stations wdt:P31 wd:Q928830\") %>%    spq_perform() head(stations_metro_Lyon) #> # A tibble: 0 × 2 #> # ℹ 2 variables: stations <chr>, stations_label <chr> stations_metro_Lyon = spq_init() %>%    spq_set(stations_code = \"wd:Q1552\") %>%   spq_filter(stations == wdt::P361(stations_code), .label=\"?stations\") %>%    spq_set(lyon_code = \"wd:Q928830\") %>%    spq_filter(stations == wdt::P31(lyon_code)) %>%    spq_select(- stations_code, - lyon_code) %>%   spq_perform() head(stations_metro_Lyon) #> # A tibble: 0 × 2 #> # ℹ 2 variables: stations <chr>, stations_label <chr> stations_metro_Lyon = spq_init() %>%    spq_set(stations_code = \"wd:Q1552\") %>%   spq_filter(stations == wdt::P361(stations_code), .label=\"?stations\") %>%    spq_set(lyon_code = \"wd:Q928830\") %>%    spq_filter(stations == wdt::P31(lyon_code)) %>%    spq_select(- stations_code, - lyon_code) %>%    spq_mutate(coords = wdt::P625(stations)) %>%    spq_perform() head(stations_metro_Lyon) #> # A tibble: 0 × 3 #> # ℹ 3 variables: coords <chr>, stations <chr>, stations_label <chr> stations_metro_Lyon.shp=sf::st_as_sf(stations_metro_Lyon, wkt = \"coords\") plot(stations_metro_Lyon.shp$coords) stations_metro_Lyon=stations_metro_Lyon %>%    transform_wikidata_coords(\"coords\") leaflet::leaflet(stations_metro_Lyon) %>%   leaflet::addTiles() %>%   leaflet::addCircles(popup=~stations_label)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_Wikidata.html","id":"example-2-cities-around-lyon","dir":"Articles","previous_headings":"","what":"Example 2 : cities around Lyon","title":"glitter for Wikidata","text":"Now, let’s imagine interested cities 200km radius around Lyon. start exploring Wikidata query finds items instances (“wdt:P31”) “city” subclass (“wdt:P279”) “city” . query might return many items seems reasonable limit number items retrieved now argument limit Now, let’s get location (“wdt:P625”) cities can refine query, stating want cities (items subclasses city) radius 5km around Lyon (lat-long coordinates ~ 45.76 4.84). use argument within_distance:","code":"find_item(\"Lyon\") #>  #>  Wikidata item search #>  #> Number of results:    10  #>  #> Results: #> 1     Lyon (Q456) - commune in the metropolis of Lyon, France  #> 2     Olympique Lyonnais (Q704) - association football club in Lyon, France  #> 3     León (Q208151) - city in Nicaragua  #> 4     Lyon (Q30102635) - family name  #> 5     Marcus Ward Lyon, Jr. (Q3290305) - U.S. mammalogist, bacteriologist, and pathologist (1875–1942)  #> 6     Lyon (Q867818) - town in Coahoma County, Mississippi, United States  #> 7     9381 Lyon (Q1192758) - asteroid  #> 8     Lyon (Q30014648) - male given name  #> 9     Jacob Lyon (Q18608055)  #> 10    Harold Lloyd Lyon (Q18911234) - botanist (1879-1957) find_item(\"city\") #>  #>  Wikidata item search #>  #> Number of results:    10  #>  #> Results: #> 1     city (Q515) - large permanent human settlement  #> 2     Manchester City F.C. (Q50602) - association football club in Manchester, England  #> 3     Leicester City F.C. (Q19481) - association football club in Leicester, England  #> 4     Stoke City F.C. (Q18736) - association football club in Stoke-on-Trent, England  #> 5     Birmingham City F.C. (Q19444) - association football club in Birmingham, England  #> 6     Cardiff City F.C. (Q18662) - association football club in Cardiff, Wales  #> 7     Norwich City F.C. (Q18721) - association football club in Norwich, England  #> 8     Swansea City A.F.C. (Q18659) - association football club in Swansea, Wales  #> 9     Hull City A.F.C. (Q19477) - association football club in Hull, England  #> 10    Bradford City A.F.C. (Q48879) - association football club in Bradford, England spq_init() %>%    spq_add(\"?city wdt:P31/wdt:P279* wd:Q515\", .label=\"?city\") %>%   spq_head(n = 10) %>%    spq_perform() #> # A tibble: 10 × 2 #>    city                                     city_label         #>    <chr>                                    <chr>              #>  1 http://www.wikidata.org/entity/Q309436   Aït Benhaddou      #>  2 http://www.wikidata.org/entity/Q817274   Beni Isguen        #>  3 http://www.wikidata.org/entity/Q2670896  Ksar Ouled Soltane #>  4 http://www.wikidata.org/entity/Q3200131  Ksar Ifegh         #>  5 http://www.wikidata.org/entity/Q3200135  Ksar of Lamaarka   #>  6 http://www.wikidata.org/entity/Q3818705  Ksar Nalut         #>  7 http://www.wikidata.org/entity/Q5242247  Daw's Castle       #>  8 http://www.wikidata.org/entity/Q11736787 Ksar Hallouf       #>  9 http://www.wikidata.org/entity/Q12233025 Ksar Beni Barka    #> 10 http://www.wikidata.org/entity/Q16593169 Ksar of Taourirt spq_init() %>%    spq_add(\"?city wdt:P31/wdt:P279* wd:Q515\", .label=\"?city\") %>%    spq_mutate(coords = wdt::P625(city)) %>%   spq_head(n = 10) %>%    spq_perform() #> # A tibble: 10 × 3 #>    city                                     city_label                    coords #>    <chr>                                    <chr>                         <chr>  #>  1 http://www.wikidata.org/entity/Q63638210 Ksar of Taddamoute            Point… #>  2 http://www.wikidata.org/entity/Q63638675 Ksar of Tamoussa ou Ali       Point… #>  3 http://www.wikidata.org/entity/Q63638831 Ksar of Tatiouine             Point… #>  4 http://www.wikidata.org/entity/Q63639134 Ksar of Tissouit Ait Seghrou… Point… #>  5 http://www.wikidata.org/entity/Q63639176 Ksar of Tissouit Sidi Hamza   Point… #>  6 http://www.wikidata.org/entity/Q65643514 Ksar El Atteuf                Point… #>  7 http://www.wikidata.org/entity/Q65643515 Ksar Bounoura                 Point… #>  8 http://www.wikidata.org/entity/Q65643516 Ksar Melika                   Point… #>  9 http://www.wikidata.org/entity/Q65921574 Ksar of Ouadane               Point… #> 10 http://www.wikidata.org/entity/Q65921575 Ksar of Chinguetti            Point… cities_around_Lyon = spq_init() %>%    spq_add(\"?city wdt:P31/wdt:P279* wd:Q486972\") %>%    spq_label(city) %>%   spq_mutate(coords = wdt::P625(city),           .within_distance=list(center=c(long=4.84,lat=45.76),                                radius=5)) %>%    spq_perform() head(cities_around_Lyon) #> # A tibble: 6 × 3 #>   city                                city_label coords                          #>   <chr>                               <chr>      <chr>                           #> 1 http://www.wikidata.org/entity/Q456 Lyon       Point(4.841388888 45.758888888) #> 2 http://www.wikidata.org/entity/Q456 Lyon       Point(4.841388888 45.758888888) #> 3 http://www.wikidata.org/entity/Q456 Lyon       Point(4.841388888 45.758888888) #> 4 http://www.wikidata.org/entity/Q456 Lyon       Point(4.841388888 45.758888888) #> 5 http://www.wikidata.org/entity/Q456 Lyon       Point(4.841388888 45.758888888) #> 6 http://www.wikidata.org/entity/Q456 Lyon       Point(4.841388888 45.758888888)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"explorer-les-données","dir":"Articles","previous_headings":"","what":"Explorer les données","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%    spq_add(\"?s ?p ?o\") %>%    spq_head(10) %>%    spq_perform(endpoint=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"dates-biographiques-dun-auteur","dir":"Articles","previous_headings":"","what":"Dates biographiques d’un auteur","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%    spq_add(\"?auteur foaf:birthday ?jour\") %>%    spq_add(\"?auteur bio:birth ?date1\") %>%    spq_add(\"?auteur bio:death ?date2\") %>%    spq_add(\"?auteur foaf:name ?nom\", .required = FALSE) %>%    spq_arrange(jour) %>%    spq_prefix() %>%    spq_head(n=10) %>%   spq_perform(endpoint=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"toutes-les-éditions-de-loeuvre-les-fleurs-du-mal-de-baudelaire","dir":"Articles","previous_headings":"","what":"Toutes les éditions de l’oeuvre Les Fleurs du Mal de Baudelaire","title":"glitter for dataBNF","text":"","code":"fleurs_du_mal=\"<http://data.bnf.fr/ark:/12148/cb11947965f>\"   tib=spq_init() %>%    spq_add(\"{fleurs_du_mal} foaf:focus ?Oeuvre\") %>%    spq_add(\"?edition rdarelationships:workManifested ?Oeuvre\") %>%    spq_add(\"?edition dcterms:date ?date\", .required=FALSE) %>%    spq_add(\"?edition dcterms:title ?titre\") %>%    spq_add(\"?edition dcterms:publisher ?editeur\") %>%    spq_head(n=10) %>%    spq_prefix() %>%    spq_perform(\"dataBNF\")   knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"lien-à-un-document-numérisé-dans-galliga","dir":"Articles","previous_headings":"","what":"Lien à un document numérisé dans Galliga","title":"glitter for dataBNF","text":"","code":"doc=\"<http://data.bnf.fr/ark:/12148/cb42712156j#about>\"  tib=spq_init() %>%    spq_add(\"{doc} rdarelationships:electronicReproduction ?URLGallica\") %>%    spq_add(\"{doc} dcterms:title ?title\") %>%    spq_prefix() %>%   spq_perform(endpoint=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"expositions-virtuelles-de-la-bnf","dir":"Articles","previous_headings":"","what":"Expositions virtuelles de la BNF","title":"glitter for dataBNF","text":"","code":"expo=\"<http://data.bnf.fr/ontology/bnf-onto/ExpositionVirtuelle>\"  tib=spq_init() %>%    spq_add(\"?exposition a {expo}\") %>%    spq_add(\"?exposition dcterms:title ?titre\") %>%    spq_add(\"?exposition dcterms:subject ?sujet\") %>%    spq_head(n=30) %>%    spq_perform(endpoint=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"retrouver-un-nom-de-personne-à-partir-dun-isni","dir":"Articles","previous_headings":"","what":"Retrouver un nom de personne à partir d’un ISNI","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%    spq_add(\"?person isni:identifierValid '0000000121012885'\") %>%    spq_add(\"?person foaf:focus ?identity\") %>%    spq_add(\"?identity foaf:familyName ?nom\") %>%    spq_add(\"?identity foaf:givenName ?prenom\") %>%    spq_perform(endpoint=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"identifiant-ark-dune-notice-à-partir-du-numéro-frbnf","dir":"Articles","previous_headings":"","what":"Identifiant ARK d’une notice à partir du numéro FRBNF","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%    spq_add(\"?pidArk bnf-onto:FRBNF '11992081'^^xsd:integer\") %>%    spq_head(n=10) %>%    spq_perform(e=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"retrouver-une-oeuvre-à-partir-dun-isbn","dir":"Articles","previous_headings":"","what":"Retrouver une oeuvre à partir d’un ISBN","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%    spq_add(\"?work rdfs:label ?title\") %>%    spq_add(\"?work dcterms:creator ?creator\") %>%    spq_add(\"?manifestation bnf-onto:isbn '2-7028-4777-3'\") %>%    spq_add(\"?manifestation rdarelationships:workManifested ?work\") %>%    spq_add(\"?creator foaf:name ?name\") %>%    spq_head(n=10) %>%    spq_perform(e=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"tous-les-auteurs-morts-avant-1924","dir":"Articles","previous_headings":"","what":"Tous les auteurs morts avant 1924","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%    spq_add(\"?oeuvre dcterms:creator ?auteur\") %>%    spq_add(\"?auteur bio:death ?mort\") %>%    spq_add(\"?auteur foaf:familyName ?nom\") %>%   spq_filter(as.integer(mort) < as.integer('1924')) %>%    spq_group_by(auteur, nom, mort) %>%    spq_arrange(desc(as.integer(mort))) %>%    spq_head(n=10) %>%    spq_perform(e=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"images-dans-data-bnf-fr","dir":"Articles","previous_headings":"","what":"Images dans data.bnf.fr","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%   spq_add(\"?image dcterms:type <http://purl.org/dc/dcmitype/StillImage>\") %>%   spq_head(n=10) %>%    spq_perform(e=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"ouvrages-adaptés-pour-la-jeunesse","dir":"Articles","previous_headings":"","what":"Ouvrages adaptés pour la jeunesse","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%    spq_add(\"?manifestation bnf-onto:ouvrageJeunesse 'true'^^xsd:boolean\") %>%    spq_add(\". rdarelationships:workManifested ?oeuvre\") %>%    spq_add(\". rdfs:seeAlso ?uri\") %>%    spq_group_by(uri, oeuvre) %>%    spq_head(n=10) %>%    spq_perform(e=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"portraits-dauteur-issus-de-gallica","dir":"Articles","previous_headings":"","what":"Portraits d’auteur, issus de Gallica","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%    spq_add(\"?auteur rdf:type skos:Concept\") %>%    spq_add(\". foaf:focus ?person\") %>%    spq_add(\"?doc rdarelationships:electronicReproduction ?url\") %>%    spq_add(\". dcterms:subject ?auteur\") %>%    spq_add(\". dcterms:subject <http://data.bnf.fr/ark:/12148/cb11932843f>\") %>%    spq_head(n=10) %>%    spq_group_by(auteur, url) %>%    spq_perform(e=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"termes-spécifiques-dun-sujet-rameau","dir":"Articles","previous_headings":"","what":"Termes spécifiques d’un sujet (RAMEAU)","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%    spq_add(\"?sujet1 skos:prefLabel ?label\") %>%    spq_add(\". skos:narrower ?uri2\") %>%    spq_add(\"?uri2 skos:prefLabel ?label2\") %>%    spq_add(\"?uri2 skos:narrower ?uri3\", .required = FALSE) %>%    spq_add(\"?uri3 skos:prefLabel ?label3\", .required = FALSE) %>%    spq_head(n=10) %>%    spq_perform(e=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"sujets-rameau-de-type-nom-commun","dir":"Articles","previous_headings":"","what":"Sujets RAMEAU de type nom commun","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%    spq_add(\"?sujet dcterms:isPartOf <http://data.bnf.fr/vocabulary/rameau/r166>\") %>%    spq_add(\". skos:prefLabel ?label\") %>%    spq_head(n=10) %>%    spq_perform(e=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"alignement-entre-les-sujets-rameau-et-lieux","dir":"Articles","previous_headings":"","what":"Alignement entre les sujets RAMEAU et lieux","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%    spq_add(\"?c a <http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing>\") %>%    spq_add(\"?lieu foaf:focus ?c\") %>%    spq_add(\"?lieu skos:closeMatch ?concept\") %>%    spq_group_by(lieu, concept , c) %>%    spq_head(n=100) %>%    spq_perform(e=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_dataBNF.html","id":"liens-vers-wikipedia-pour-les-auteurs","dir":"Articles","previous_headings":"","what":"Liens vers wikipedia pour les auteurs","title":"glitter for dataBNF","text":"","code":"tib=spq_init() %>%    spq_add(\"?ConceptA foaf:focus ?auteur\") %>%    spq_add(\"?oeuvre dcterms:creator ?auteur\") %>%    spq_add(\"?ConceptA rdfs:seeAlso ?wikipedia\") %>%    spq_filter(str_detect(wikipedia,'wikipedia')) %>%    spq_head(n=10) %>%    spq_perform(e=\"dataBNF\")  knitr::kable(tib)"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_hal.html","id":"recherche-par-document","dir":"Articles","previous_headings":"","what":"Recherche par document","title":"glitter for HAL","text":"s’intéresse à ce document: haldoc:inria-00362381.","code":""},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_hal.html","id":"rechercher-toutes-les-informations-associées-à-ce-document","dir":"Articles","previous_headings":"Recherche par document","what":"Rechercher toutes les informations associées à ce document","title":"glitter for HAL","text":"","code":"tib_info=spq_init() %>%    spq_add(\"haldoc:inria-00362381 dcterms:hasVersion ?version\") %>% # Ce doc a des versions ?version   spq_add(\"?version ?p ?object\") %>%                               # ?version a des prop. ?p les liant à ?object   spq_perform(e=\"hal\")  head(tib_info) ## # A tibble: 6 × 3 ##   object                                               p                 version ##   <chr>                                                <chr>             <chr>   ## 1 http://purl.org/spar/fabio/Report                    http://www.w3.or… https:… ## 2 2009-02-18T10:22:23                                  http://purl.org/… https:… ## 3 2022-10-27T04:02:35                                  http://purl.org/… https:… ## 4 https://hal.inria.fr/inria-00362381/file/RR-6847.pdf http://www.opena… https:… ## 5 en                                                   http://purl.org/… https:… ## 6 XML                                                  http://purl.org/… https:…"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_hal.html","id":"rechercher-luri-le-titre-le-lien-vers-le-pdf-et-les-auteurs-de-toutes-les-versions-de-ce-document","dir":"Articles","previous_headings":"Recherche par document","what":"Rechercher l’URI, le titre, le lien vers le PDF et les auteurs de [toutes les versions de] ce document","title":"glitter for HAL","text":"Remarque: peut concaténer les réponses d’une variable (ici les auteurs par exemple): peut également agréger/résumer les résultats renvoyés par la requête, par exemple en recherchant le nombre d’auteurs d’un document (par version)","code":"query_doc = spq_init() %>%    spq_add(\"haldoc:inria-00362381 dcterms:hasVersion ?version\") %>% # Ce doc a des versions ?version   spq_add(\"?version dcterms:title ?title\") %>%                     # ?version a pour titre ?titre   spq_add(\". dcterms:creator ?creator\") %>%                        # ...... et pour créateur ?creator   spq_add(\". ore:aggregates ?pdf\") %>%                             # ...... et ce lien vers un ?pdf   spq_add(\"?creator hal:person ?person\") %>%                       # ?creator est une personne ?person   spq_add(\"?person foaf:name ?name\")                               # ?person a pour nom ?name  tib_doc=spq_perform(query_doc,\"hal\")  tib_doc ## # A tibble: 4 × 6 ##   creator             name                  pdf             person title version ##   <chr>               <chr>                 <chr>           <chr>  <chr> <chr>   ## 1 nodeID://b930061332 Khaled Mohamed Khelif https://hal.in… https… Quer… https:… ## 2 nodeID://b930061330 Hacène Cherfi         https://hal.in… https… Quer… https:… ## 3 nodeID://b930061328 Olivier Corby         https://hal.in… https… Quer… https:… ## 4 nodeID://b930061331 Fabien Gandon         https://hal.in… https… Quer… https:… query_doc_autConcat = query_doc %>%    spq_group_by(version, title,pdf) %>%             # Groupe les résultats par ?version, ?title, ?pdf   spq_summarise(authors = str_c(name, sep = ', '))      # Concatène les noms d'auteur dans ?authors  tib_doc_autConcat = spq_perform(query_doc_autConcat,\"hal\")  tib_doc_autConcat ## # A tibble: 1 × 4 ##   pdf                                                  title     version authors ##   <chr>                                                <chr>     <chr>   <chr>   ## 1 https://hal.inria.fr/inria-00362381/file/RR-6847.pdf Querying… https:… Khaled… tib_nbAutDoc=spq_init() %>%    spq_add(\"haldoc:inria-00362381 dcterms:hasVersion ?version\") %>% # Ce doc a des versions ?version   spq_add(\"?version dcterms:creator ?creator\") %>%                 # ?version a pour créateur ?creator   spq_add(\"?creator hal:person ?person\") %>%                       # ?creator est une personne ?person   spq_group_by(version) %>%                                     # Groupe par ?version   spq_summarise(nbperson = n(unique(person))) %>%      # Résume: ?nbperson = nb de ?person dist.     spq_perform(e=\"hal\")  tib_nbAutDoc ## # A tibble: 1 × 2 ##   version                                                     nbperson ##   <chr>                                                          <int> ## 1 https://data.archives-ouvertes.fr/document/inria-00362381v1        5"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_hal.html","id":"rechercher-luri-et-les-types-et-létiquette-associée-de-toutes-les-versions-de-ce-document","dir":"Articles","previous_headings":"Recherche par document","what":"Rechercher l’URI et les types (et l’étiquette associée) de [toutes les versions de] ce document","title":"glitter for HAL","text":"cherche les types associés aux versions de documents. Ces types sont associés à des étiquettes (dans plusieurs langues) qui permettent de comprendre de quoi il s’agit “en langage ordinaire”. peut filtrer les résultats pour n’afficher que la ligne de résultats pour laquelle l’étiquette est en français :","code":"query_docType=spq_init() %>%    spq_add(\"haldoc:inria-00362381 dcterms:hasVersion ?version\") %>% # Ce doc a des versions ?version   spq_add(\"?version dcterms:type ?type\") %>%                       # ?version est un document de type ?type   spq_add(\"?type skos:prefLabel ?label\")                           # ?type a pour étiquette ?label  tib_docType=spq_perform(query_docType,\"hal\")  tib_docType ## # A tibble: 2 × 3 ##   label   type                                             version               ##   <chr>   <chr>                                            <chr>                 ## 1 Rapport https://data.archives-ouvertes.fr/doctype/Report https://data.archive… ## 2 Reports https://data.archives-ouvertes.fr/doctype/Report https://data.archive… query_docTypeFr=query_docType %>%    spq_filter(lang(label) == 'fr')     # Filtre pour garder les étiquettes en français  tib_docTypeFr=spq_perform(query_docTypeFr,\"hal\")  tib_docTypeFr ## # A tibble: 1 × 3 ##   label   type                                             version               ##   <chr>   <chr>                                            <chr>                 ## 1 Rapport https://data.archives-ouvertes.fr/doctype/Report https://data.archive…"},{"path":[]},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_hal.html","id":"afficher-les-documents-associés-à-une-forme-auteur","dir":"Articles","previous_headings":"Recherche par forme-auteur","what":"Afficher les documents associés à une forme-auteur","title":"glitter for HAL","text":"Considérons une des “forme-auteur” de Fabien Gandon, https://data.archives-ouvertes.fr/author/827904 (vu dans les résultats des requêtes précédentes).","code":"fabien_gandon=\"<https://data.archives-ouvertes.fr/author/827904>\" # fabien_gandon = cette forme auteur  query_foAut=spq_init() %>%    spq_add(\"?document dcterms:hasVersion ?version\") %>%  # ?document a des versions ?version   spq_add(\"?version dcterms:creator ?creator\") %>%      # ?version a pour créateur ?creator   spq_add(\"?creator hal:person {fabien_gandon}\") %>%    # ?creator est fabien_gandon ({déf. de l'objet dans R})   spq_add(\"?version dcterms:type ?type\") %>%            # ?version a pour type ?type   spq_add(\"?type skos:prefLabel ?label\") %>%            # ?type a pour étiquette ?label   spq_filter(lang(label) == 'fr')                       # Filtre pour garder les ?label en français tib_foAut=spq_perform(query_foAut,\"hal\")  head(tib_foAut) ## # A tibble: 6 × 5 ##   creator             document                               label type  version ##   <chr>               <chr>                                  <chr> <chr> <chr>   ## 1 nodeID://b943144765 https://data.archives-ouvertes.fr/doc… Comm… http… https:… ## 2 nodeID://b948191575 https://data.archives-ouvertes.fr/doc… Arti… http… https:… ## 3 nodeID://b933934258 https://data.archives-ouvertes.fr/doc… Dire… http… https:… ## 4 nodeID://b935242036 https://data.archives-ouvertes.fr/doc… Comm… http… https:… ## 5 nodeID://b947531997 https://data.archives-ouvertes.fr/doc… Arti… http… https:… ## 6 nodeID://b943161661 https://data.archives-ouvertes.fr/doc… Ouvr… http… https:…"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_hal.html","id":"enrichirsimplifier-la-requête","dir":"Articles","previous_headings":"Recherche par forme-auteur","what":"Enrichir/simplifier la requête","title":"glitter for HAL","text":"peut résumer les résultats requêtés par exemple en affichant le nombre de documents par type (et étiquette associée): peut afficher ces résultats en ordonnant les lignes selon le nombre de documents décroissant: peut également s’intéresser aux dates de publication. Par exemple ici, récupère la date de publication, l’année correspondante, et résume l’information en calculant le nombre de documents par année.","code":"query_foAutNbDoc=query_foAut %>%    spq_group_by(type, label) %>%                      # Groupe par ?type et ?label   spq_summarise(nbdoc = n(unique(document)))      tib_foAutNbDoc=spq_perform(query_foAutNbDoc,\"hal\")  tib_foAutNbDoc ## # A tibble: 4 × 3 ##   label                                     type                           nbdoc ##   <chr>                                     <chr>                          <int> ## 1 Ouvrages                                  https://data.archives-ouverte…     1 ## 2 Direction d'ouvrage, Proceedings, Dossier https://data.archives-ouverte…     1 ## 3 Article dans une revue                    https://data.archives-ouverte…     4 ## 4 Communication dans un congrès             https://data.archives-ouverte…     3 query_foAutNbDocOrd=query_foAutNbDoc%>%    spq_arrange(desc(nbdoc))        # Ordonne par ordre décroissant de ?nbdoc  tib_foAutNbDocOrd=spq_perform(query_foAutNbDocOrd,\"hal\")  tib_foAutNbDocOrd ## # A tibble: 4 × 3 ##   label                                     type                           nbdoc ##   <chr>                                     <chr>                          <int> ## 1 Article dans une revue                    https://data.archives-ouverte…     4 ## 2 Communication dans un congrès             https://data.archives-ouverte…     3 ## 3 Ouvrages                                  https://data.archives-ouverte…     1 ## 4 Direction d'ouvrage, Proceedings, Dossier https://data.archives-ouverte…     1 tib_dat=spq_init() %>%    spq_add(\"?document dcterms:hasVersion ?version\") %>%    spq_add(\"?version dcterms:creator ?creator\") %>%   spq_add(\". dcterms:issued ?date\") %>%                      # ?version est sortie à ?date   spq_add(\"?creator hal:person {fabien_gandon}\") %>%    spq_mutate(year = year(date)) %>%                    # Crée ?year = année de ?date   spq_group_by(year) %>%                               # Groupe par ?year   spq_summarise(nbdoc = n(unique(document))) %>%    spq_arrange(year) %>%    spq_perform(e=\"hal\")  tib_dat ## # A tibble: 6 × 2 ##    year nbdoc ##   <int> <int> ## 1  2015     1 ## 2  2017     2 ## 3  2019     1 ## 4  2020     1 ## 5  2021     2 ## 6  2022     3"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_hal.html","id":"recherche-par-auteur","dir":"Articles","previous_headings":"","what":"Recherche par auteur","title":"glitter for HAL","text":"Une personne=un IdHAL=plusieurs formes-auteur","code":""},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_hal.html","id":"afficher-les-uris-de-toutes-les-formes-auteur-associées-à-la-forme-fabien-gandon-via-lidhal","dir":"Articles","previous_headings":"Recherche par auteur","what":"Afficher les URIs de toutes les formes-auteur associées à la forme « Fabien Gandon » via l’IdHAL","title":"glitter for HAL","text":"","code":"query_aut=spq_init() %>%    spq_add(\"{fabien_gandon} ore:isAggregatedBy ?o\") %>% # {fabien gandon} correspond à ?o   spq_add(\"?forme ore:isAggregatedBy ?o\")              # ?forme correspond à ?o  tib_aut=spq_perform(query_aut,\"hal\")  tib_aut ## # A tibble: 0 × 2 ## # ℹ 2 variables: forme <chr>, o <chr>"},{"path":"https://lvaudor.github.io/glitter/articles/glitter_for_hal.html","id":"enrichirrésumer-les-données","dir":"Articles","previous_headings":"Recherche par auteur","what":"Enrichir/résumer les données","title":"glitter for HAL","text":"… en comptant le nombre de documents par année:","code":"query_autNbDocYear=query_aut %>%    spq_add(\"?version dcterms:creator ?creator\") %>%      # ?version a pour créateur ?creator   spq_add(\"?creator hal:person ?forme\") %>%             # ?creator est une personne ?forme   spq_add(\"?version dcterms:issued ?date\") %>%          # ?version a été publié à ?date   spq_add(\"?document dcterms:hasVersion ?version\") %>%  # ?document a pour versions ?version   spq_mutate(year = year(date)) %>%              # Ajoute ?year qui correspond à l'année de ?date   spq_group_by(year) %>%                          # Groupe par ?year   spq_arrange(year) %>%                              # Ordonne par ordre décroissant de ?year   spq_summarise(nbdoc = n(unique(document)))  tib_autNbDocYear=spq_perform(query_autNbDocYear,\"hal\")  tib_autNbDocYear ## # A tibble: 0 × 2 ## # ℹ 2 variables: year <chr>, nbdoc <chr>"},{"path":"https://lvaudor.github.io/glitter/articles/internals.html","id":"glitter-query-object","dir":"Articles","previous_headings":"","what":"glitter query object","title":"glitter design and internals","text":"query object list elements variables (vars), filters, etc. Later might make actual class, maybe R6 one? built different calls spq_ functions. SPARQL query string assembled spq_assemble(). Later might add linting stage.","code":""},{"path":"https://lvaudor.github.io/glitter/articles/internals.html","id":"glitter-tooling","dir":"Articles","previous_headings":"","what":"glitter tooling","title":"glitter design and internals","text":"hood, glitter uses rlang package Lionel Henry Hadley Wickham encapsulate ... arguments quosures handling . Useful references Metaprogramming section Advanced R book Hadley Wickham well documentation rlang package. xmlparsedata package Gábor Csárdi parse R looking code, xml2 package Hadley Wickham, Jim Hester Jeroen Ooms, transform code SPARQL code XPath. Useful references documentation two packages well searching XPath query examples via search engine. httr2 package Hadley Wickham package perform queries. learnt sending queries thanks source code WikidataQueryServiceR package Mikhail Popov. details next sections.","code":""},{"path":"https://lvaudor.github.io/glitter/articles/internals.html","id":"spq_add","dir":"Articles","previous_headings":"","what":"spq_add()","title":"glitter design and internals","text":"spq_add() works differently spq_ functions looks closer SPARQL. Clearly something like spq_add(query, \"?item wdt:P31 wd:Q13442814\") look like R code. motivation : easier copy-pasting SPARQL query examples; ability keep SPARQL concepts. Triple patterns parsed decompose_triples uses string manipulation. Now, one wants go full DSL, possible, via spq_filter() spq_mutate(). triple pattern spq_add(query, \"?item wdt:P31 wd:Q13442814\") means finding items instance (“wdt:P31”) scholarly article (“wd:Q13442814”). glitter, can also write looks like normal tidyverse pipeline. Note namespacing done R way .e. wdt::P31 opposed “wdt:P31”. Similary, adds variable “wdt:P1843” Sonchus oleraceus (“wd:Q331676”). can written:","code":"spq_init() %>%   spq_filter(item == wdt::P31(wd::Q13442814)) spq_init() %>%   spq_add(\"wd:Q331676 wdt:P1843 ?statement\") spq_init() %>%   spq_mutate(statement = wdt::P1843(wd::Q331676))"},{"path":"https://lvaudor.github.io/glitter/articles/internals.html","id":"other-spq_-functions","dir":"Articles","previous_headings":"","what":"Other spq_ functions","title":"glitter design and internals","text":"spq_ functions spq_arrange(), spq_select(), spq_mutate(), spq_mutate() , spq_filter(), spq_summarize() core DSL. ... arguments three different things can passed: R-looking snippets (DSL), instance spq_filter(query, lang(itemTitle) == \"en\"); R-looking snippets string (programmatic use), instance spq_filter(query, 'lang(itemTitle) == \"en\"'); SPARQL snippets escaped spq() (copy-pasting SPARQL examples), instance spq_filter(query, spq('lang(?itemTitle)=\"en\"')). names arguments starts dot prevent name clashes. differentiate three things users can pass? First, arguments transformed quosures rlang::enquos(...). passed function like spq_treat_argument(). “Like” complex behavior spq_filter() spq_mutate(), can accept R-looking snippets translated either triple patterns , warrants bit logic. result class spq, means can use string , SPARQL. result another character, code translated (example: 'lang(itemTitle) == \"en\"'). , need get text expression via rlang::expr_text(arg) %>% stringr::str_replace(\"^~\", \"\") (example: user wrote lang(itemTitle) == \"en\"). two latter cases, R-looking code translate SPARQL snippet. first parse code xmlparsedata xml2. series transformations supported XPath happen. glitter package contains tibble called all_correspondences: instances n(blabla) become COUNT(blabla). also transform argument names. Look “SELECT” statement , str_c() function becomes GROUP_CONCAT() argument SEPARATOR. Also note argument comes colon, comma like R. Later, need document correspondences better, need stress test DSL cases using arguments.","code":"head(glitter::all_correspondences) #> # A tibble: 6 × 3 #>   R      SPARQL args       #>   <chr>  <chr>  <list>     #> 1 n      COUNT  <list [0]> #> 2 sum    SUM    <list [0]> #> 3 mean   AVG    <list [0]> #> 4 min    MIN    <list [0]> #> 5 max    MAX    <list [0]> #> 6 sample SAMPLE <list [0]> spq_init() %>%   spq_summarise(authors = str_c(name, sep = ', '))"},{"path":"https://lvaudor.github.io/glitter/articles/internals.html","id":"special-case-of-spq_filter-and-spq_mutate","dir":"Articles","previous_headings":"Other spq_ functions","what":"Special case of spq_filter() and spq_mutate()","title":"glitter design and internals","text":"spq_filter() receives R-looking fragments translated SPARQL snippets FILTER… triple patterns. spq_mutate() receives R-looking fragments translated SPARQL snippets SELECT… triple patterns. moment detection based ::: R-looking fragment contains ::, assume become triple pattern. Later, need make robust function spq_set() makes easier create synonyms subject/verb/object via SPARQL VALUES. assume spq_filter()/spq_mutate() received R-looking fragment meant translated triple pattern, parsed , forgetting order two cases: spq_mutate(object = verb(subject)); spq_filter(subject == verb(object)).","code":""},{"path":"https://lvaudor.github.io/glitter/articles/internals.html","id":"r-cmd-check-hack","dir":"Articles","previous_headings":"","what":"R CMD check hack","title":"glitter design and internals","text":"examples using something like got flagged wdt dependency stated. understandable. bypass examples examples, R chunks section called “examples”. means aren’t checked. Thankfully similar code real tests!","code":"spq_init() %>%   spq_filter(item == wdt::P31(wd::Q13442814))"},{"path":"https://lvaudor.github.io/glitter/articles/internals.html","id":"future-work","dir":"Articles","previous_headings":"","what":"Future work","title":"glitter design and internals","text":"issue tracker glitter quite representative future work, well sentences starting “Later” article. stated beginning article, ideas comments welcome.","code":""},{"path":"https://lvaudor.github.io/glitter/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lise Vaudor. Author, maintainer. Maëlle Salmon. Author.","code":""},{"path":"https://lvaudor.github.io/glitter/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vaudor L, Salmon M (2023). glitter: glitter makes SPARQL. https://lvaudor.github.io/glitter/, https://github.com/lvaudor/glitter.","code":"@Manual{,   title = {glitter: glitter makes SPARQL},   author = {Lise Vaudor and Maëlle Salmon},   year = {2023},   note = {https://lvaudor.github.io/glitter/, https://github.com/lvaudor/glitter}, }"},{"path":"https://lvaudor.github.io/glitter/index.html","id":"glitter-","dir":"","previous_headings":"","what":"glitter makes SPARQL","title":"glitter makes SPARQL","text":"DSL SPARQL R. ✨ glitter produces sparkle SPARQL! ✨ package aims writing sending SPARQL queries without advanced knowledge SPARQL language syntax. makes exploration use Linked Open Data (Wikidata particular) easier know SPARQL well. glitter, compared writing SPARQL queries hand, code easier write, easier read peers know SPARQL. glitter package supports “domain-specific language” (DSL) function names (syntax) closer tidyverse base R SPARQL. instance, find corpus 5 articles title English “wikidata” title, instead writing SPARQL hand can run: Note able use str_detect() str_to_lower() (stringr package) instead SPARQL’s functions REGEX LCASE. perform query, get random subset movies date released, use Note able “overwrite” date variable, straightforward dplyr, much SPARQL.","code":"library(\"glitter\") query <- spq_init() %>%   spq_add(\"?item wdt:P31 wd:Q13442814\") %>%   spq_label(item) %>%   spq_filter(str_detect(str_to_lower(item_label), 'wikidata')) %>%   spq_head(n = 5)  query #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?item ?item_label #> WHERE { #>  #> ?item wdt:P31 wd:Q13442814. #> OPTIONAL { #> ?item rdfs:label ?item_labell. #> FILTER(lang(?item_labell) IN ('en')) #> } #>  #> BIND(COALESCE(?item_labell,'') AS #> ?item_label)FILTER(REGEX(LCASE(?item_label),\"wikidata\")) #> } #>  #> LIMIT 5 spq_perform(query) #> # A tibble: 5 × 2 #>   item                                     item_label                            #>   <chr>                                    <chr>                                 #> 1 http://www.wikidata.org/entity/Q18507561 Wikidata: A Free Collaborative Knowl… #> 2 http://www.wikidata.org/entity/Q21503276 Utilizing the Wikidata system to imp… #> 3 http://www.wikidata.org/entity/Q21503284 Wikidata: A platform for data integr… #> 4 http://www.wikidata.org/entity/Q23712646 Wikidata as a semantic framework for… #> 5 http://www.wikidata.org/entity/Q24074986 From Freebase to Wikidata: The Great… spq_init() %>%   spq_add(\"?film wdt:P31 wd:Q11424\") %>%   spq_label(film) %>%   spq_add(\"?film wdt:P577 ?date\") %>%   spq_mutate(date = year(date)) %>%   spq_head(10) %>%   spq_perform() #> # A tibble: 10 × 3 #>    film                                  date film_label        #>    <chr>                                <dbl> <chr>             #>  1 http://www.wikidata.org/entity/Q372   2009 We Live in Public #>  2 http://www.wikidata.org/entity/Q595   2011 The Intouchables  #>  3 http://www.wikidata.org/entity/Q595   2011 The Intouchables  #>  4 http://www.wikidata.org/entity/Q595   2012 The Intouchables  #>  5 http://www.wikidata.org/entity/Q595   2012 The Intouchables  #>  6 http://www.wikidata.org/entity/Q593   2011 A Gang Story      #>  7 http://www.wikidata.org/entity/Q1365  1974 Swept Away        #>  8 http://www.wikidata.org/entity/Q1365  1974 Swept Away        #>  9 http://www.wikidata.org/entity/Q1365  1975 Swept Away        #> 10 http://www.wikidata.org/entity/Q1365  1975 Swept Away"},{"path":"https://lvaudor.github.io/glitter/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"glitter makes SPARQL","text":"Install packages R-universe: GitHub:","code":"install.packages(\"glitter\", repos = \"https://lvaudor.r-universe.dev\") install.packages(\"remotes\") #if remotes is not already installed remotes::install_github(\"lvaudor/glitter\")"},{"path":"https://lvaudor.github.io/glitter/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"glitter makes SPARQL","text":"can access documentation regarding package glitter pkgdown website.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/count_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Get counts of items directly in classes — count_items","title":"Get counts of items directly in classes — count_items","text":"Get counts items directly classes","code":""},{"path":"https://lvaudor.github.io/glitter/reference/count_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get counts of items directly in classes — count_items","text":"","code":"count_items(classes)"},{"path":"https://lvaudor.github.io/glitter/reference/count_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get counts of items directly in classes — count_items","text":"classes vector wikidata classes","code":""},{"path":"https://lvaudor.github.io/glitter/reference/count_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get counts of items directly in classes — count_items","text":"","code":"classes=c(\"wd:Q627272\",\"wd:Q99527517\") count_items(classes) #> Warning: There was 1 warning in `dplyr::filter()`. #> ℹ In argument: `.data$name %in% .query[[\"prefixes_used\"]]`. #> Caused by warning: #> ! The `.label` argument of `spq_add()` is deprecated as of glitter 0.2.0. #> ℹ Ability to use `.label` will be dropped in next release, use `spq_label()` #>   instead. #> ℹ The deprecated feature was likely used in the glitter package. #>   Please report the issue at <https://github.com/lvaudor/glitter/issues>. #> [1] 286   3"},{"path":"https://lvaudor.github.io/glitter/reference/get_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Get description of Wikidata thing — get_description","title":"Get description of Wikidata thing — get_description","text":"Get description Wikidata thing","code":""},{"path":"https://lvaudor.github.io/glitter/reference/get_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get description of Wikidata thing — get_description","text":"","code":"get_description(id, language = \"en\")"},{"path":"https://lvaudor.github.io/glitter/reference/get_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get description of Wikidata thing — get_description","text":"id Wikidata ID, either item (\"Qxxxxx\") property (\"Pxxxxx\"), item . language language description, defaults English (\"en\")","code":""},{"path":"https://lvaudor.github.io/glitter/reference/get_description.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get description of Wikidata thing — get_description","text":"","code":"get_description(\"wd:Q431603\") #> [1] \"groups using advocacy in order to influence public opinion and policy\" get_description(\"wd:Q431603\", language=\"es\") #> [1] \"conjunto de personas organizadas con el fin de actuar conjuntamente en defensa de un interés común\""},{"path":"https://lvaudor.github.io/glitter/reference/get_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get description of Wikidata thing — get_info","title":"Get description of Wikidata thing — get_info","text":"Get description Wikidata thing","code":""},{"path":"https://lvaudor.github.io/glitter/reference/get_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get description of Wikidata thing — get_info","text":"","code":"get_info(id, language = \"en\", with_labels = FALSE)"},{"path":"https://lvaudor.github.io/glitter/reference/get_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get description of Wikidata thing — get_info","text":"id Wikidata ID, either item (\"wd:Qxxxxx\") property (\"wd:Pxxxxx\"), item . language language description, defaults English (\"en\") with_labels Whether keep labels (Boolean)","code":""},{"path":"https://lvaudor.github.io/glitter/reference/get_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get description of Wikidata thing — get_info","text":"","code":"get_info(\"wd:Q431603\") #> $label #> [1] \"advocacy group\" #>  #> $description #> [1] \"groups using advocacy in order to influence public opinion and policy\" #>"},{"path":"https://lvaudor.github.io/glitter/reference/get_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get label of Wikidata thing — get_label","title":"Get label of Wikidata thing — get_label","text":"Get label Wikidata thing","code":""},{"path":"https://lvaudor.github.io/glitter/reference/get_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get label of Wikidata thing — get_label","text":"","code":"get_label(id, language = \"en\")"},{"path":"https://lvaudor.github.io/glitter/reference/get_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get label of Wikidata thing — get_label","text":"id Wikidata ID, either item (\"Qxxxxx\") property (\"Pxxxxx\"), item . language language label, defaults English (\"en\")","code":""},{"path":"https://lvaudor.github.io/glitter/reference/get_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get label of Wikidata thing — get_label","text":"","code":"get_label(\"wd:Q431603\") #> [1] \"advocacy group\" get_label(\"wd:Q431603\", language=\"fr\") #> [1] \"groupe de défense d'intérêts\""},{"path":"https://lvaudor.github.io/glitter/reference/get_thing.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Wikidata item or property\nGet unformatted info from Wikidata based on an item or property id. — get_thing","title":"Get Wikidata item or property\nGet unformatted info from Wikidata based on an item or property id. — get_thing","text":"Get Wikidata item property Get unformatted info Wikidata based item property id.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/get_thing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Wikidata item or property\nGet unformatted info from Wikidata based on an item or property id. — get_thing","text":"","code":"get_thing(id)"},{"path":"https://lvaudor.github.io/glitter/reference/get_thing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Wikidata item or property\nGet unformatted info from Wikidata based on an item or property id. — get_thing","text":"id Wikidata ID, either item (\"wd:Qxxxxx\") property (\"wd:Pxxxxx\")","code":""},{"path":"https://lvaudor.github.io/glitter/reference/get_thing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Wikidata item or property\nGet unformatted info from Wikidata based on an item or property id. — get_thing","text":"","code":"get_thing(\"wd:Q431603\") #>  #> \tWikidata item Q431603  #>  #> Label:\t\t advocacy group \t[63 other languages available] #> Aliases:\t 利益集团, 利益團體, 壓力團體, 倡仪团体, קבוצות אינטרס, קבוצות בעלי עניין, קבוצת בעלי עניין, קבוצת לחץ, 압력단체, Grupo de presion, Grupos de presión, Grupos de presion, grupo de interes, Surverühm, Huvigrupp, Kepentingan kelompok, Interessensvertretung, Interessensgruppen, Pressure Group, Interessensgruppe, Interessengruppe, Interessenvereinigung, Lobbyorganisation, 利益集団, インタレストグループ, 圧力団体, ロビー団体, プレッシャーグループ, 特別利益団体, λόμπι, ομάδα ειδικού ενδιαφέροντος, Grupa za pritisak, pressiegroep, belangenvereniging, группа давления, группы интересов, лоббистская организация, лоббирующая организация, Интересне групе, baskı grupları, lobici gruplar, savunma grubu, ilginç grup, özel ilgi grubu, lobi organizasyonu, savunuculuk organizasyonu, kulis, lobi grubu, baskı grubu, baskı organizasyonu, baskı örgütü, özel ilgi organizasyonu, گروه فشار, گروه ذی نفوذ, گروه ذینفوذ, Interesseorganisasjoner, Interessegruppe, Interesseforening, interest group, special interest group, lobbying organization, lobby group, advocacy organization, lobbying group, lobbyists, SIG, lobbying organisation, advocacy organisation, special interest organization, special interest organisation, pressure group, pressure organization, pressure organisation, activist organization, activist group, interest organization, groupe de défense, ініцыятыўная група, lobby, lobbyorganisation, kumpulan pengutara, kumpulan penyokong, kumpulan perakuan, kumpulan sokongan, kumpulan pengutaraan, kumpulan anjuran, edunvalvontajärjestö, etujärjestö, ინტერესთა ჯგუფი, intressegrupp, grup d'interès, grup de pressió, lobistična skupina, адвокаційна група, grup de lobby  #> Description: groups using advocacy in order to influence public opinion and policy \t[17 other languages available] #> Claims:\t\t 27  #> Sitelinks:\t 45"},{"path":"https://lvaudor.github.io/glitter/reference/get_triple.html","id":null,"dir":"Reference","previous_headings":"","what":"Get triple with subject verb object. — get_triple","title":"Get triple with subject verb object. — get_triple","text":"Get triple subject verb object.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/get_triple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get triple with subject verb object. — get_triple","text":"","code":"get_triple(   triple = NULL,   subject = NULL,   verb = NULL,   object = NULL,   required = TRUE,   label = NA,   limit = NULL,   within_box = c(NA, NA),   within_distance = c(NA, NA) )"},{"path":"https://lvaudor.github.io/glitter/reference/get_triple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get triple with subject verb object. — get_triple","text":"triple triple subject anonymous variable (instance, default, \"?subject\") item (instance \"wd:Q456\")) verb property (instance \"wdt:P190\") object anonymous variable (instance, default, \"?object\") item (instance \"wd:Q456\")) required whether require triple (Boolean) label vector variables include label column (defaults NA) limit max number items sent back within_box provided, rectangular bounding box triple query. Provided list(southwest=c(long=...,lat=...),northeast=c(long=...,lat=...)) within_distance provided, circular bounding box triple query. Provided list(center=c(long=...,lat=...), radius=...), radius kilometers. center can also provided variable (instance, \"?location\") center coordinates retrieved directly query.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/get_triple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get triple with subject verb object. — get_triple","text":"","code":"get_triple(s = \"wd:Q456\", v = \"wdt:P625\", o = \"?coords\") #> # A tibble: 1 × 1 #>   coords                          #>   <chr>                           #> 1 Point(4.841388888 45.758888888) get_triple(t = \"wd:Q456 wdt:P625 ?coords\") #> # A tibble: 1 × 1 #>   coords                          #>   <chr>                           #> 1 Point(4.841388888 45.758888888)"},{"path":"https://lvaudor.github.io/glitter/reference/glitter-package.html","id":null,"dir":"Reference","previous_headings":"","what":"glitter: glitter makes SPARQL — glitter-package","title":"glitter: glitter makes SPARQL — glitter-package","text":"package aims writing sending SPARQL queries. makes exploration use Linked Open Data (Wikidata particular) easier know SPARQL.","code":""},{"path":[]},{"path":"https://lvaudor.github.io/glitter/reference/glitter-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"glitter: glitter makes SPARQL — glitter-package","text":"Maintainer: Lise Vaudor lise.vaudor@ens-lyon.fr (ORCID) Authors: Maëlle Salmon msmaellesalmon@gmail.com (ORCID)","code":""},{"path":"https://lvaudor.github.io/glitter/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://lvaudor.github.io/glitter/reference/send_sparql.html","id":null,"dir":"Reference","previous_headings":"","what":"Send SPARQL query to endpoint and get tibble as a result — send_sparql","title":"Send SPARQL query to endpoint and get tibble as a result — send_sparql","text":"Send SPARQL query endpoint get tibble result","code":""},{"path":"https://lvaudor.github.io/glitter/reference/send_sparql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send SPARQL query to endpoint and get tibble as a result — send_sparql","text":"","code":"send_sparql(   .query,   endpoint = \"Wikidata\",   user_agent = getOption(\"glitter.ua\",     \"glitter R package (https://github.com/lvaudor/glitter)\"),   max_tries = getOption(\"glitter.max_tries\", 3L),   max_seconds = getOption(\"glitter.max_seconds\", 120L),   timeout = getOption(\"glitter.timeout\", 1000L),   request_type = c(\"url\", \"body-form\"),   dry_run = FALSE )"},{"path":"https://lvaudor.github.io/glitter/reference/send_sparql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send SPARQL query to endpoint and get tibble as a result — send_sparql","text":".query string corresponding SPARQL query endpoint string url corresponding SPARQL endpoint. Defaults \"Wikidata\" user_agent string indicating user agent send query. max_tries, max_seconds Cap maximum number attempts max_tries total elapsed time first request max_seconds. neither option supplied (default), req_perform() retry. timeout maximum number seconds wait (httr2::req_timeout()). request_type string indicating query sent: URL (url, default, common) body form (body-form). dry_run Boolean indicating whether return output httr2::req_dry_run() rather httr2::req_perform. Useful debugging.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/send_sparql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send SPARQL query to endpoint and get tibble as a result — send_sparql","text":"","code":"metro_query='SELECT ?item ?itemLabel ?coords {  ?item wdt:P361 wd:Q1552;  wdt:P625 ?coords.  OPTIONAL{?item wdt:P1619 ?date.}  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . } } ORDER BY ?itemLabel ' send_sparql(metro_query) #> # A tibble: 0 × 3 #> # ℹ 3 variables: item <chr>, itemLabel <chr>, coords <chr>"},{"path":"https://lvaudor.github.io/glitter/reference/sparql-dsl.html","id":null,"dir":"Reference","previous_headings":"","what":"Correspondence between R-DSL functions and SPARQL functions/operators. — set_functions","title":"Correspondence between R-DSL functions and SPARQL functions/operators. — set_functions","text":"Correspondence R-DSL functions SPARQL functions/operators.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/sparql-dsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correspondence between R-DSL functions and SPARQL functions/operators. — set_functions","text":"","code":"set_functions  term_functions  misc_functions  string_functions  numeric_functions  datetime_functions  operators  all_correspondences"},{"path":"https://lvaudor.github.io/glitter/reference/sparql-dsl.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Correspondence between R-DSL functions and SPARQL functions/operators. — set_functions","text":"data frame. R R-DSL function SPARQL SPARQL function args list-column R vs SPARQL argument names object class tbl_df (inherits tbl, data.frame) 21 rows 2 columns. object class tbl_df (inherits tbl, data.frame) 9 rows 2 columns. object class tbl_df (inherits tbl, data.frame) 12 rows 3 columns. object class tbl_df (inherits tbl, data.frame) 4 rows 2 columns. object class tbl_df (inherits tbl, data.frame) 7 rows 2 columns. object class tbl_df (inherits tbl, data.frame) 6 rows 2 columns. object class tbl_df (inherits tbl, data.frame) 66 rows 3 columns.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq.html","id":null,"dir":"Reference","previous_headings":"","what":"SPARQL escaping. — spq","title":"SPARQL escaping. — spq","text":"Like dbplyr::spq().","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SPARQL escaping. — spq","text":"","code":"spq(...)  is.spq(x)  as.spq(x)"},{"path":"https://lvaudor.github.io/glitter/reference/spq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SPARQL escaping. — spq","text":"... Character vectors combined single SPARQL expression. x Object coerce","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a triple pattern statement to a query — spq_add","title":"Add a triple pattern statement to a query — spq_add","text":"Add triple pattern statement query","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a triple pattern statement to a query — spq_add","text":"","code":"spq_add(   .query = NULL,   .triple_pattern = NULL,   .subject = NULL,   .verb = NULL,   .object = NULL,   .prefixes = NULL,   .required = TRUE,   .label = NA,   .within_box = c(NA, NA),   .within_distance = c(NA, NA),   .filter = NULL )"},{"path":"https://lvaudor.github.io/glitter/reference/spq_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a triple pattern statement to a query — spq_add","text":".query query .triple_pattern triple pattern statement (replaces arguments subject verb object) .subject anonymous variable (instance, default, \"?subject\") item (instance \"wd:Q456\")) .verb property (instance \"wdt:P190\") .object anonymous variable (instance, default, \"?object\") item (instance \"wd:Q456\")) .prefixes Custom prefixes .required whether existence value triple required (defaults TRUE). set FALSE, triples query returned even particular triple missing) .label See spq_label(). .within_box provided, rectangular bounding box triple query. Provided list(southwest=c(long=...,lat=...),northeast=c(long=...,lat=...)) .within_distance provided, circular bounding box triple query. Provided list(center=c(long=...,lat=...), radius=...), radius kilometers. center can also provided variable (instance, \"?location\") center coordinates retrieved directly query. .filter Filter triple. use .required=FALSE","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a triple pattern statement to a query — spq_add","text":"arguments .subject, .verb, .object useful programmatic usage, actually used within glitter code .","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_add.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a triple pattern statement to a query — spq_add","text":"","code":"# find the cities spq_init() %>%   spq_add(\"?city wdt:P31/wdt:P279* wd:Q486972\") %>%   spq_label(city) %>%   spq_mutate(coords = wdt::P625(city),           .within_distance=list(center=c(long=4.84,lat=45.76),                                radius=5)) %>%   spq_perform()  # find the individuals of the species spq_init() %>%   spq_add(\"?mayor wdt:P31 ?species\") %>%   # dog, cat or chicken   spq_set(species = c('wd:Q144','wd:Q146', 'wd:Q780')) %>%   # who occupy the function   spq_add(\"?mayor p:P39 ?node\") %>%   # of mayor   spq_add(\"?node ps:P39 wd:Q30185\") %>%   # of some places   spq_add(\"?node pq:P642 ?place\") %>%   spq_perform()"},{"path":"https://lvaudor.github.io/glitter/reference/spq_arrange.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange results by variable value — spq_arrange","title":"Arrange results by variable value — spq_arrange","text":"Arrange results variable value","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_arrange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange results by variable value — spq_arrange","text":"","code":"spq_arrange(.query, ..., .replace = FALSE)"},{"path":"https://lvaudor.github.io/glitter/reference/spq_arrange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange results by variable value — spq_arrange","text":".query list elements query ... variables arrange (SPARQL strings escaped spq(), strings, see examples) .replace whether replace pre-existing arranging","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_arrange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange results by variable value — spq_arrange","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_arrange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange results by variable value — spq_arrange","text":"","code":"# descending length, ascending item_label, \"R\" syntax spq_init() %>%   spq_add(\"?item wdt:P31/wdt:P279* wd:Q4022\") %>%   spq_label(item) %>%   spq_add(\"?item wdt:P2043 ?length\") %>%   spq_add(\"?item wdt:P625 ?location\") %>%   spq_arrange(desc(length), item_label) %>%   spq_head(50) #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?item (COALESCE(?item_labell,'') AS ?item_label) ?length ?location #> WHERE { #>  #> ?item wdt:P31/wdt:P279* wd:Q4022. #> OPTIONAL { #> ?item rdfs:label ?item_labell. #> FILTER(lang(?item_labell) IN ('en')) #> } #>  #> ?item wdt:P2043 ?length. #> ?item wdt:P625 ?location. #>  #> } #> ORDER BY ?item_label DESC(?length) #> LIMIT 50  # descending length, ascending item_label, \"R\" syntax with quotes e.g. for a loop variable = \"length\" spq_init() %>%   spq_add(\"?item wdt:P31/wdt:P279* wd:Q4022\") %>%   spq_label(item) %>%   spq_add(\"?item wdt:P2043 ?length\") %>%   spq_add(\"?item wdt:P625 ?location\") %>%   spq_arrange(sprintf(\"desc(%s)\", variable), item_label) %>%   spq_head(50) #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?item (COALESCE(?item_labell,'') AS ?item_label) ?length ?location #> WHERE { #>  #> ?item wdt:P31/wdt:P279* wd:Q4022. #> OPTIONAL { #> ?item rdfs:label ?item_labell. #> FILTER(lang(?item_labell) IN ('en')) #> } #>  #> ?item wdt:P2043 ?length. #> ?item wdt:P625 ?location. #>  #> } #> ORDER BY ?item_label DESC(?length) #> LIMIT 50  # descending length, ascending item_label, SPARQL syntax spq_init() %>%   spq_add(\"?item wdt:P31/wdt:P279* wd:Q4022\") %>%   spq_label(item) %>%   spq_add(\"?item wdt:P2043 ?length\") %>%   spq_add(\"?item wdt:P625 ?location\") %>%   spq_arrange(spq(\"DESC(?length) ?item_label\")) %>%   spq_head(50) #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?item (COALESCE(?item_labell,'') AS ?item_label) ?length ?location #> WHERE { #>  #> ?item wdt:P31/wdt:P279* wd:Q4022. #> OPTIONAL { #> ?item rdfs:label ?item_labell. #> FILTER(lang(?item_labell) IN ('en')) #> } #>  #> ?item wdt:P2043 ?length. #> ?item wdt:P625 ?location. #>  #> } #> ORDER BY DESC(?length) ?item_label #> LIMIT 50  # descending xsd:integer(mort), R syntax spq_init() %>%   spq_add(\"?oeuvre dcterms:creator ?auteur\") %>%   spq_add(\"?auteur bio:death ?mort\") %>%   spq_add(\"?auteur foaf:familyName ?nom\") %>%   spq_filter(as.integer(mort) < as.integer(\"1924\")) %>%   spq_group_by(auteur, nom, mort) %>%   spq_arrange(desc(as.integer(mort))) #> PREFIX foaf: <http://xmlns.com/foaf/0.1/> #> PREFIX bio: <http://vocab.org/bio/0.1/> #> PREFIX dcterms: <http://purl.org/dc/terms/> #> SELECT ?auteur ?mort ?nom ?oeuvre #> WHERE { #>  #> ?oeuvre dcterms:creator ?auteur. #> ?auteur bio:death ?mort. #> ?auteur foaf:familyName ?nom. #> FILTER(xsd:integer(?mort)<xsd:integer(\"1924\")) #> } #> GROUP BY ?auteur ?mort ?nom #> ORDER BY DESC(xsd:integer(?mort))  # descending as.integer(mort), SPARQL syntax spq_init() %>%   spq_add(\"?oeuvre dcterms:creator ?auteur\") %>%   spq_add(\"?auteur bio:death ?mort\") %>%   spq_add(\"?auteur foaf:familyName ?nom\") %>%   spq_filter(as.integer(mort) < as.integer(\"1924\")) %>%   spq_group_by(auteur, nom, mort) %>%   spq_arrange(spq(\"DESC(xsd:integer(?mort))\")) #> PREFIX foaf: <http://xmlns.com/foaf/0.1/> #> PREFIX bio: <http://vocab.org/bio/0.1/> #> PREFIX dcterms: <http://purl.org/dc/terms/> #> SELECT ?auteur ?mort ?nom ?oeuvre #> WHERE { #>  #> ?oeuvre dcterms:creator ?auteur. #> ?auteur bio:death ?mort. #> ?auteur foaf:familyName ?nom. #> FILTER(xsd:integer(?mort)<xsd:integer(\"1924\")) #> } #> GROUP BY ?auteur ?mort ?nom #> ORDER BY DESC(xsd:integer(?mort))  # Usage of the .replace argument # .replace = FALSE (default) spq_init() %>%   spq_add(\"?item wdt:P31/wdt:P279* wd:Q4022\") %>%   spq_label(item) %>%   spq_add(\"?item wdt:P2043 ?length\") %>%   spq_add(\"?item wdt:P625 ?location\") %>%   spq_arrange(desc(length)) %>%   spq_arrange(location) %>%   spq_head(50) #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?item (COALESCE(?item_labell,'') AS ?item_label) ?length ?location #> WHERE { #>  #> ?item wdt:P31/wdt:P279* wd:Q4022. #> OPTIONAL { #> ?item rdfs:label ?item_labell. #> FILTER(lang(?item_labell) IN ('en')) #> } #>  #> ?item wdt:P2043 ?length. #> ?item wdt:P625 ?location. #>  #> } #> ORDER BY DESC(?length) ?location #> LIMIT 50  # .replace = TRUE spq_init() %>%   spq_add(\"?item wdt:P31/wdt:P279* wd:Q4022\") %>%   spq_label(item) %>%   spq_add(\"?item wdt:P2043 ?length\") %>%   spq_add(\"?item wdt:P625 ?location\") %>%   spq_arrange(desc(length)) %>%   spq_arrange(location, .replace = TRUE) %>%   spq_head(50) #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?item (COALESCE(?item_labell,'') AS ?item_label) ?length ?location #> WHERE { #>  #> ?item wdt:P31/wdt:P279* wd:Q4022. #> OPTIONAL { #> ?item rdfs:label ?item_labell. #> FILTER(lang(?item_labell) IN ('en')) #> } #>  #> ?item wdt:P2043 ?length. #> ?item wdt:P625 ?location. #>  #> } #> ORDER BY ?location #> LIMIT 50  # Mixing syntaxes spq_init() %>%   spq_add(\"?item wdt:P31/wdt:P279* wd:Q4022\") %>%   spq_label(item) %>%   spq_add(\"?item wdt:P2043 ?length\") %>%   spq_add(\"?item wdt:P625 ?location\") %>%   spq_arrange(desc(length), spq(\"?location\")) %>%   spq_head(50) #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?item (COALESCE(?item_labell,'') AS ?item_label) ?length ?location #> WHERE { #>  #> ?item wdt:P31/wdt:P279* wd:Q4022. #> OPTIONAL { #> ?item rdfs:label ?item_labell. #> FILTER(lang(?item_labell) IN ('en')) #> } #>  #> ?item wdt:P2043 ?length. #> ?item wdt:P625 ?location. #>  #> } #> ORDER BY DESC(?length) ?location #> LIMIT 50"},{"path":"https://lvaudor.github.io/glitter/reference/spq_assemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Assemble query parts into a proper SPARQL query — spq_assemble","title":"Assemble query parts into a proper SPARQL query — spq_assemble","text":"Assemble query parts proper SPARQL query","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_assemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assemble query parts into a proper SPARQL query — spq_assemble","text":"","code":"spq_assemble(.query, endpoint = \"Wikidata\", strict = TRUE)"},{"path":"https://lvaudor.github.io/glitter/reference/spq_assemble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assemble query parts into a proper SPARQL query — spq_assemble","text":".query list elements query endpoint SPARQL endpoint send query strict whether perform linting query, error case problem detected.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_assemble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assemble query parts into a proper SPARQL query — spq_assemble","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_assemble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assemble query parts into a proper SPARQL query — spq_assemble","text":"","code":"spq_init() %>%   spq_add(\"?city wdt:P31 wd:Q515\") %>%   spq_label(city, .languages = \"fr$\") %>%   spq_add(\"?city wdt:P1082 ?pop\") %>%   spq_assemble() %>%   cat() #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?city (COALESCE(?city_labell,'') AS ?city_label) ?pop #> WHERE { #>  #> ?city wdt:P31 wd:Q515. #> OPTIONAL { #> \t?city rdfs:label ?city_labell. #> \tFILTER(lang(?city_labell) IN ('fr')) #> } #>  #> ?city wdt:P1082 ?pop. #>  #> } #>"},{"path":"https://lvaudor.github.io/glitter/reference/spq_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters results by adding conditions — spq_filter","title":"Filters results by adding conditions — spq_filter","text":"Filters results adding conditions","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters results by adding conditions — spq_filter","text":"","code":"spq_filter(   .query = NULL,   ...,   .label = NA,   .within_box = c(NA, NA),   .within_distance = c(NA, NA) )"},{"path":"https://lvaudor.github.io/glitter/reference/spq_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters results by adding conditions — spq_filter","text":".query list elements query ... variables arrange (SPARQL strings escaped spq(), strings, see examples) .label See spq_label(). .within_box provided, rectangular bounding box triple query. Provided list(southwest=c(long=...,lat=...),northeast=c(long=...,lat=...)) .within_distance provided, circular bounding box triple query. Provided list(center=c(long=...,lat=...), radius=...), radius kilometers. center can also provided variable (instance, \"?location\") center coordinates retrieved directly query.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters results by adding conditions — spq_filter","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_filter.html","id":"some-examples","dir":"Reference","previous_headings":"","what":"Some examples","title":"Filters results by adding conditions — spq_filter","text":"","code":"spq_init() %>% spq_filter(item == wdt::P31(wd::Q13442814))  # Lexemes in English that match an expression # here starting with \"pota\" query <- spq_init() |>   spq_prefix(prefixes = c(dct = \"http://purl.org/dc/terms/\")) |>   spq_add(spq('?lexemeId dct:language wd:Q1860')) |>   spq_mutate(lemma = wikibase::lemma(lexemeId)) |>   spq_filter(str_detect(lemma, '^pota.*')) |>   spq_select(lexemeId, lemma)"},{"path":"https://lvaudor.github.io/glitter/reference/spq_group_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Group the results by one or more variables — spq_group_by","title":"Group the results by one or more variables — spq_group_by","text":"Group results one variables","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_group_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group the results by one or more variables — spq_group_by","text":"","code":"spq_group_by(.query, ...)"},{"path":"https://lvaudor.github.io/glitter/reference/spq_group_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group the results by one or more variables — spq_group_by","text":".query query ... Either R-DSL strings variable names","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_group_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group the results by one or more variables — spq_group_by","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_group_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group the results by one or more variables — spq_group_by","text":"","code":"spq_init() %>% spq_add(\"?item wdt:P361 wd:Q297853\") %>% spq_add(\"?item wdt:P1082 ?folkm_ngd\") %>% spq_add(\"?area wdt:P31 wd:Q1907114\", .label = \"?area\") %>% spq_add(\"?area wdt:P527 ?item\") %>% spq_group_by(area, areaLabel)  %>% spq_summarise(total_folkm = sum(folkm_ngd)) #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?area (SUM(?folkm_ngd) AS ?total_folkm) #> WHERE { #>  #> ?item wdt:P361 wd:Q297853. #> ?item wdt:P1082 ?folkm_ngd. #> ?area wdt:P31 wd:Q1907114. #> OPTIONAL { #> ?area rdfs:label ?area_labell. #> FILTER(lang(?area_labell) IN ('en')) #> } #>  #> ?area wdt:P527 ?item. #>  #> } #> GROUP BY ?area ?areaLabel #>"},{"path":"https://lvaudor.github.io/glitter/reference/spq_head.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the first lines of results — spq_head","title":"Return the first lines of results — spq_head","text":"Return first lines results","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_head.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the first lines of results — spq_head","text":"","code":"spq_head(.query, n = 5)"},{"path":"https://lvaudor.github.io/glitter/reference/spq_head.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the first lines of results — spq_head","text":".query list elements query n maximum number lines return","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_head.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the first lines of results — spq_head","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_head.html","id":"subsetting","dir":"Reference","previous_headings":"","what":"Subsetting","title":"Return the first lines of results — spq_head","text":"spq_offset() spq_head() useful used spq_arrange() makes order results predictable.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_head.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the first lines of results — spq_head","text":"","code":"# Return the default of 5 items spq_init() %>% spq_add(\"?item wdt:P31 wd:Q5\") %>% spq_label(item) %>% spq_add(\"?item wdt:P19/wdt:P131* wd:Q60\") %>% spq_add(\"?item wikibase:sitelinks ?linkcount\") %>% spq_arrange(desc(linkcount)) %>% spq_head() #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?item (COALESCE(?item_labell,'') AS ?item_label) ?linkcount #> WHERE { #>  #> ?item wdt:P31 wd:Q5. #> OPTIONAL { #> ?item rdfs:label ?item_labell. #> FILTER(lang(?item_labell) IN ('en')) #> } #>  #> ?item wdt:P19/wdt:P131* wd:Q60. #> ?item wikibase:sitelinks ?linkcount. #>  #> } #> ORDER BY DESC(?linkcount) #> LIMIT 5  # Return 42 items spq_init() %>% spq_add(\"?item wdt:P31 wd:Q5\") %>% spq_label(item) %>% spq_add(\"?item wdt:P19/wdt:P131* wd:Q60\") %>% spq_add(\"?item wikibase:sitelinks ?linkcount\") %>% spq_arrange(desc(linkcount)) %>% spq_head(42) #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?item (COALESCE(?item_labell,'') AS ?item_label) ?linkcount #> WHERE { #>  #> ?item wdt:P31 wd:Q5. #> OPTIONAL { #> ?item rdfs:label ?item_labell. #> FILTER(lang(?item_labell) IN ('en')) #> } #>  #> ?item wdt:P19/wdt:P131* wd:Q60. #> ?item wikibase:sitelinks ?linkcount. #>  #> } #> ORDER BY DESC(?linkcount) #> LIMIT 42"},{"path":"https://lvaudor.github.io/glitter/reference/spq_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a query object. — spq_init","title":"Initialize a query object. — spq_init","text":"Initialize query object.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a query object. — spq_init","text":"","code":"spq_init()"},{"path":"https://lvaudor.github.io/glitter/reference/spq_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a query object. — spq_init","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_init.html","id":"printing","dir":"Reference","previous_headings":"","what":"Printing","title":"Initialize a query object. — spq_init","text":"SPARQL queries shown using cli package, built-theme. can change using cli.user_theme option. use .emph keywords functions, .field variables, .pkg prefixes, .val strings, .url prefix URLs. can also turn cli behavior setting environment variable \"GLITTER.NOCLI\" non-empty string. glitter snapshot tests.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Label variables — spq_label","title":"Label variables — spq_label","text":"Label variables","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label variables — spq_label","text":"","code":"spq_label(   .query,   ...,   .required = FALSE,   .languages = getOption(\"glitter.lang\", \"en$\"),   .overwrite = FALSE )"},{"path":"https://lvaudor.github.io/glitter/reference/spq_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label variables — spq_label","text":".query list elements query ... variables arrange (SPARQL strings escaped spq(), strings, see examples) .required whether existence value triple required (defaults TRUE). set FALSE, triples query returned even particular triple missing) .languages Languages query labels. Use NULL removing restrictions language (defined ), \"*\" defined language. write \"en\" can get labels regional variants \"en-GB\". want results \"en\" , write \"en$\". .overwrite whether replace variables labels. spq_select(blop) means get blop blop_label. spq_select(blop, .overwrite = TRUE) means get label blop, \"original\" blop variable returned.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label variables — spq_label","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_label.html","id":"example","dir":"Reference","previous_headings":"","what":"Example","title":"Label variables — spq_label","text":"","code":"spq_init() %>%   spq_add(\"?mayor wdt:P31 ?species\") %>% # dog, cat or chicken   spq_set(species = c('wd:Q144','wd:Q146', 'wd:Q780')) %>% # who occupy the function   spq_add(\"?mayor p:P39 ?node\") %>% # of mayor   spq_add(\"?node ps:P39 wd:Q30185\") %>% # of some places   spq_add(\"?node pq:P642 ?place\") %>%   spq_label(mayor, place, .languages = c(\"fr\", \"en\", \"de\")) %>%   spq_perform()"},{"path":"https://lvaudor.github.io/glitter/reference/spq_language.html","id":null,"dir":"Reference","previous_headings":"","what":"Get labels in a specified language (apply only to Wikidata) — spq_language","title":"Get labels in a specified language (apply only to Wikidata) — spq_language","text":"Get labels specified language (apply Wikidata)","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_language.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get labels in a specified language (apply only to Wikidata) — spq_language","text":"","code":"spq_language(.query = NULL, language = \"en\")"},{"path":"https://lvaudor.github.io/glitter/reference/spq_language.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get labels in a specified language (apply only to Wikidata) — spq_language","text":".query query language language labels provided (defaults \"en\" English). See complete list Wikimedia language codes . can also set language \"auto\" Wikidata SPARQL engine try detect language automatically. Specifying several languages return labels languages following priority specified (e.g. language=\"fr,en\", label returned preferentially French, , French label item, English).","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_language.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get labels in a specified language (apply only to Wikidata) — spq_language","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_language.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get labels in a specified language (apply only to Wikidata) — spq_language","text":"","code":"spq_init() %>%  spq_add(\"?film wdt:P31 wd:Q11424\") %>%  spq_label(film, .languages = c(\"fr$\", \"en$\")) %>%  spq_head(10) #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?film (COALESCE(?film_labell,'') AS ?film_label) (lang(?film_labell) AS #> ?film_label_lang) #> WHERE { #>  #> ?film wdt:P31 wd:Q11424. #> OPTIONAL { #> ?film rdfs:label ?film_labell. #> FILTER(lang(?film_labell) IN ('fr') || lang(?film_labell) IN ('en')) #> } #>  #>  #> } #>  #> LIMIT 10"},{"path":"https://lvaudor.github.io/glitter/reference/spq_mutate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and modify variables in the results — spq_mutate","title":"Create and modify variables in the results — spq_mutate","text":"Create modify variables results","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_mutate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and modify variables in the results — spq_mutate","text":"","code":"spq_mutate(   .query,   ...,   .label = NA,   .within_box = c(NA, NA),   .within_distance = c(NA, NA) )"},{"path":"https://lvaudor.github.io/glitter/reference/spq_mutate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and modify variables in the results — spq_mutate","text":".query list elements query ... variables arrange (SPARQL strings escaped spq(), strings, see examples) .label See spq_label(). .within_box provided, rectangular bounding box triple query. Provided list(southwest=c(long=...,lat=...),northeast=c(long=...,lat=...)) .within_distance provided, circular bounding box triple query. Provided list(center=c(long=...,lat=...), radius=...), radius kilometers. center can also provided variable (instance, \"?location\") center coordinates retrieved directly query.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_mutate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and modify variables in the results — spq_mutate","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_mutate.html","id":"some-examples","dir":"Reference","previous_headings":"","what":"Some examples","title":"Create and modify variables in the results — spq_mutate","text":"","code":"# common name of a plant species in different languages # the triplet pattern \"wd:Q331676 wdt:P1843 ?statement\" creates the variable statement # hence our writing it in reverse within the spq_mutate() function spq_init() %>% spq_mutate(statement = wdt::P1843(wd::Q331676)) %>% spq_mutate(lang = lang(statement))"},{"path":"https://lvaudor.github.io/glitter/reference/spq_offset.html","id":null,"dir":"Reference","previous_headings":"","what":"Offset the first generated result — spq_offset","title":"Offset the first generated result — spq_offset","text":"Offset first generated result","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_offset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Offset the first generated result — spq_offset","text":"","code":"spq_offset(.query, n = 5)"},{"path":"https://lvaudor.github.io/glitter/reference/spq_offset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Offset the first generated result — spq_offset","text":".query list elements query n maximum number lines return","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_offset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Offset the first generated result — spq_offset","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_offset.html","id":"subsetting","dir":"Reference","previous_headings":"","what":"Subsetting","title":"Offset the first generated result — spq_offset","text":"spq_offset() spq_head() useful used spq_arrange() makes order results predictable.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_offset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Offset the first generated result — spq_offset","text":"","code":"# Return 42 items spq_init() %>% spq_add(\"?item wdt:P31 wd:Q5\") %>% spq_label(item) %>% spq_add(\"?item wdt:P19/wdt:P131* wd:Q60\") %>% spq_add(\"?item wikibase:sitelinks ?linkcount\") %>% spq_arrange(desc(linkcount)) %>% spq_head(n=42) #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?item (COALESCE(?item_labell,'') AS ?item_label) ?linkcount #> WHERE { #>  #> ?item wdt:P31 wd:Q5. #> OPTIONAL { #> ?item rdfs:label ?item_labell. #> FILTER(lang(?item_labell) IN ('en')) #> } #>  #> ?item wdt:P19/wdt:P131* wd:Q60. #> ?item wikibase:sitelinks ?linkcount. #>  #> } #> ORDER BY DESC(?linkcount) #> LIMIT 42  # Return 42 items after the first 11 items spq_init() %>% spq_add(\"?item wdt:P31 wd:Q5\") %>% spq_label(item) %>% spq_add(\"?item wdt:P19/wdt:P131* wd:Q60\") %>% spq_add(\"?item wikibase:sitelinks ?linkcount\") %>% spq_arrange(desc(linkcount)) %>% spq_head(42) %>% spq_offset(11) #> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> #> SELECT ?item (COALESCE(?item_labell,'') AS ?item_label) ?linkcount #> WHERE { #>  #> ?item wdt:P31 wd:Q5. #> OPTIONAL { #> ?item rdfs:label ?item_labell. #> FILTER(lang(?item_labell) IN ('en')) #> } #>  #> ?item wdt:P19/wdt:P131* wd:Q60. #> ?item wikibase:sitelinks ?linkcount. #>  #> } #> ORDER BY DESC(?linkcount) #> LIMIT 42OFFSET 11"},{"path":"https://lvaudor.github.io/glitter/reference/spq_perform.html","id":null,"dir":"Reference","previous_headings":"","what":"Assemble query parts into a sparql query and send it to endpoint to get a tibble as a result. — spq_perform","title":"Assemble query parts into a sparql query and send it to endpoint to get a tibble as a result. — spq_perform","text":"Assemble query parts sparql query send endpoint get tibble result.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_perform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assemble query parts into a sparql query and send it to endpoint to get a tibble as a result. — spq_perform","text":"","code":"spq_perform(   .query,   endpoint = \"Wikidata\",   user_agent = getOption(\"glitter.ua\",     \"glitter R package (https://github.com/lvaudor/glitter)\"),   max_tries = getOption(\"glitter.max_tries\", 3L),   max_seconds = getOption(\"glitter.max_seconds\", 120L),   timeout = getOption(\"glitter.timeout\", 1000L),   request_type = c(\"url\", \"body-form\"),   dry_run = FALSE,   replace_prefixes = FALSE )"},{"path":"https://lvaudor.github.io/glitter/reference/spq_perform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assemble query parts into a sparql query and send it to endpoint to get a tibble as a result. — spq_perform","text":".query list elements query endpoint string url corresponding SPARQL endpoint. Defaults \"Wikidata\" user_agent string indicating user agent send query. max_tries, max_seconds Cap maximum number attempts max_tries total elapsed time first request max_seconds. neither option supplied (default), req_perform() retry. timeout maximum number seconds wait (httr2::req_timeout()). request_type string indicating query sent: URL (url, default, common) body form (body-form). dry_run Boolean indicating whether return output httr2::req_dry_run() rather httr2::req_perform. Useful debugging. replace_prefixes Boolean indicating whether replace used prefixes results table, instance making, instance \"http://www.wikidata.org/entity/\" \"wd:\".","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_perform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assemble query parts into a sparql query and send it to endpoint to get a tibble as a result. — spq_perform","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_perform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assemble query parts into a sparql query and send it to endpoint to get a tibble as a result. — spq_perform","text":"","code":"if (FALSE) { spq_init() %>%   spq_add(.subject=\"?city\",.verb=\"wdt:P31\",.object=\"wd:Q515\") %>%   spq_add(.subject=\"?city\",.verb=\"wdt:P1082\",.object=\"?pop\") %>%   spq_label(city) %>%   spq_head(n=5) %>%   spq_perform() }"},{"path":"https://lvaudor.github.io/glitter/reference/spq_prefix.html","id":null,"dir":"Reference","previous_headings":"","what":"Add prefixes to the query — spq_prefix","title":"Add prefixes to the query — spq_prefix","text":"Add prefixes query","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_prefix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add prefixes to the query — spq_prefix","text":"","code":"spq_prefix(.query = NULL, auto = TRUE, prefixes = NULL)"},{"path":"https://lvaudor.github.io/glitter/reference/spq_prefix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add prefixes to the query — spq_prefix","text":".query list elements query auto whether use built-prefixes prefixes vector prefixes","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_prefix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add prefixes to the query — spq_prefix","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_prefix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add prefixes to the query — spq_prefix","text":"","code":"spq_init() %>% spq_prefix(prefixes=c(dbo=\"http://dbpedia.org/ontology/\")) #> PREFIX dbo: <http://dbpedia.org/ontology/> #> SELECT * #> WHERE { #>  #>  #> } #>"},{"path":"https://lvaudor.github.io/glitter/reference/spq_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Select (and create) particular variables — spq_select","title":"Select (and create) particular variables — spq_select","text":"Select (create) particular variables","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select (and create) particular variables — spq_select","text":"","code":"spq_select(.query = NULL, ..., .spq_duplicate = NULL)"},{"path":"https://lvaudor.github.io/glitter/reference/spq_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select (and create) particular variables — spq_select","text":".query list elements query ... variables arrange (SPARQL strings escaped spq(), strings, see examples) .spq_duplicate handle duplicates: keep (NULL), eliminate (distinct) reduce (reduced, advanced usage).","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select (and create) particular variables — spq_select","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select (and create) particular variables — spq_select","text":"","code":"query = spq_init() spq_select(query, count = n (human), eyecolor_label, haircolor_label) #>  #> SELECT (COUNT(?human) AS ?count) ?eyecolor_label ?haircolor_label #> WHERE { #>  #>  #> } #>"},{"path":"https://lvaudor.github.io/glitter/reference/spq_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set helper values for the query — spq_set","title":"Set helper values for the query — spq_set","text":"Set helper values query (helps readability)","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set helper values for the query — spq_set","text":"","code":"spq_set(.query, ...)"},{"path":"https://lvaudor.github.io/glitter/reference/spq_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set helper values for the query — spq_set","text":".query query ... Helper values definition.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set helper values for the query — spq_set","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_set.html","id":"some-examples","dir":"Reference","previous_headings":"","what":"Some examples","title":"Set helper values for the query — spq_set","text":"","code":"# find the individuals of the species spq_init() %>% # dog, cat or chicken spq_set(species = c('wd:Q144','wd:Q146', 'wd:Q780'), mayorcode = \"wd:Q30185\") %>% spq_filter(mayor == wdt::P31(species)) %>% spq_add(\"?mayor p:P39 ?node\") %>% # of mayor spq_add(\"?node ps:P39 ?mayorcode\") %>% # of some places spq_add(\"?node pq:P642 ?place\") %>% spq_label(species, mayor, place) %>% spq_select(-species, -place, -node, -mayor, -mayorcode) %>% spq_perform()"},{"path":"https://lvaudor.github.io/glitter/reference/spq_summarise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise each group of results to fewer results — spq_summarise","title":"Summarise each group of results to fewer results — spq_summarise","text":"Summarise group results fewer results","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_summarise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise each group of results to fewer results — spq_summarise","text":"","code":"spq_summarise(.query, ...)  spq_summarize(.query, ...)"},{"path":"https://lvaudor.github.io/glitter/reference/spq_summarise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise each group of results to fewer results — spq_summarise","text":".query list elements query ... variables arrange (SPARQL strings escaped spq(), strings, see examples)","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_summarise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise each group of results to fewer results — spq_summarise","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_summarise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise each group of results to fewer results — spq_summarise","text":"","code":"result = spq_init() %>% spq_add(\"?item wdt:P361 wd:Q297853\") %>% spq_add(\"?item wdt:P1082 ?folkm_ngd\") %>% spq_add(\"?area wdt:P31 wd:Q1907114\") %>% spq_label(area) %>% spq_add(\"?area wdt:P527 ?item\") %>% spq_group_by(area, area_label)  %>% spq_summarise(total_folkm = sum(folkm_ngd))"},{"path":"https://lvaudor.github.io/glitter/reference/spq_tally.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the observations — spq_tally","title":"Count the observations — spq_tally","text":"functions inspired dplyr::count() dplyr::tally(). spq_tally() assumes already done grouping.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_tally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the observations — spq_tally","text":"","code":"spq_tally(.query, sort = FALSE, name = \"n\")  spq_count(.query, ..., sort = FALSE, name = \"n\")"},{"path":"https://lvaudor.github.io/glitter/reference/spq_tally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the observations — spq_tally","text":".query list elements query sort TRUE, show largest groups top. (like sort argument dplyr::tally()) name Name count column (like name argument dplyr::tally()) ... variables arrange (SPARQL strings escaped spq(), strings, see examples)","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_tally.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the observations — spq_tally","text":"query object","code":""},{"path":"https://lvaudor.github.io/glitter/reference/spq_tally.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the observations — spq_tally","text":"","code":"if (FALSE) { spq_init() %>% spq_add(\"?film wdt:P31 wd:Q11424\") %>% spq_mutate(narrative_location = wdt::P840(film)) %>% spq_label(narrative_location) %>% spq_tally(name = \"n_films\") %>% spq_perform()  # the same with spq_count  spq_init() %>% spq_add(\"?film wdt:P31 wd:Q11424\") %>% spq_mutate(narrative_location = wdt::P840(film)) %>% spq_label(narrative_location) %>% spq_count(name = \"n_films\") %>% spq_perform()  # Now with grouping spq_init() %>% spq_add(\"?film wdt:P31 wd:Q11424\") %>% spq_mutate(narrative_location = wdt::P840(film)) %>% spq_label(film, narrative_location) %>% spq_group_by(narrative_location_label) %>% spq_tally(sort = TRUE, name = \"n_films\") %>% spq_perform()   # More direct with spq_count() spq_init() %>% spq_add(\"?film wdt:P31 wd:Q11424\") %>% spq_mutate(narrative_location = wdt::P840(film)) %>% spq_label(film, narrative_location) %>% spq_count(narrative_location_label, sort = TRUE, name = \"n_films\") %>% spq_perform() }"},{"path":"https://lvaudor.github.io/glitter/reference/subclasses_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Get subclasses of a Wikidata class — subclasses_of","title":"Get subclasses of a Wikidata class — subclasses_of","text":"Get subclasses Wikidata class","code":""},{"path":"https://lvaudor.github.io/glitter/reference/subclasses_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get subclasses of a Wikidata class — subclasses_of","text":"","code":"subclasses_of(id, include_self = FALSE)"},{"path":"https://lvaudor.github.io/glitter/reference/subclasses_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get subclasses of a Wikidata class — subclasses_of","text":"id id class include_self whether include class results table","code":""},{"path":"https://lvaudor.github.io/glitter/reference/subclasses_of.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get subclasses of a Wikidata class — subclasses_of","text":"","code":"subclasses_of(\"wd:Q7930989\") #> # A tibble: 38 × 4 #>    from        to                                     classes      classes_label #>    <chr>       <chr>                                  <chr>        <chr>         #>  1 wd:Q7930989 http://www.wikidata.org/entity/Q515    http://www.… city          #>  2 wd:Q7930989 http://www.wikidata.org/entity/Q3957   http://www.… town          #>  3 wd:Q7930989 http://www.wikidata.org/entity/Q123601 http://www.… cities and t… #>  4 wd:Q7930989 http://www.wikidata.org/entity/Q159438 http://www.… Hero City of… #>  5 wd:Q7930989 http://www.wikidata.org/entity/Q174844 http://www.… megacity      #>  6 wd:Q7930989 http://www.wikidata.org/entity/Q188509 http://www.… suburb        #>  7 wd:Q7930989 http://www.wikidata.org/entity/Q692581 http://www.… holy city     #>  8 wd:Q7930989 http://www.wikidata.org/entity/Q853252 http://www.… mining town   #>  9 wd:Q7930989 http://www.wikidata.org/entity/Q896881 http://www.… city with te… #> 10 wd:Q7930989 http://www.wikidata.org/entity/Q902814 http://www.… border town   #> # ℹ 28 more rows"},{"path":"https://lvaudor.github.io/glitter/reference/superclasses_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Get superclasses of a Wikidata class — superclasses_of","title":"Get superclasses of a Wikidata class — superclasses_of","text":"Get superclasses Wikidata class","code":""},{"path":"https://lvaudor.github.io/glitter/reference/superclasses_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get superclasses of a Wikidata class — superclasses_of","text":"","code":"superclasses_of(id, include_self = FALSE)"},{"path":"https://lvaudor.github.io/glitter/reference/superclasses_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get superclasses of a Wikidata class — superclasses_of","text":"id id class include_self whether include class results table","code":""},{"path":"https://lvaudor.github.io/glitter/reference/superclasses_of.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get superclasses of a Wikidata class — superclasses_of","text":"","code":"superclasses_of(\"wd:Q7930989\") #> # A tibble: 3 × 4 #>   from                                     to          classes     classes_label #>   <chr>                                    <chr>       <chr>       <chr>         #> 1 http://www.wikidata.org/entity/Q17457753 wd:Q7930989 http://www… census subdi… #> 2 http://www.wikidata.org/entity/Q486972   wd:Q7930989 http://www… human settle… #> 3 http://www.wikidata.org/entity/Q3257686  wd:Q7930989 http://www… locality"},{"path":"https://lvaudor.github.io/glitter/reference/transform_wikidata_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Get coords at lat-lng from Wikidata format — transform_wikidata_coords","title":"Get coords at lat-lng from Wikidata format — transform_wikidata_coords","text":"Get coords lat-lng Wikidata format","code":""},{"path":"https://lvaudor.github.io/glitter/reference/transform_wikidata_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get coords at lat-lng from Wikidata format — transform_wikidata_coords","text":"","code":"transform_wikidata_coords(data, coord_column, prefix = \"\")"},{"path":"https://lvaudor.github.io/glitter/reference/transform_wikidata_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get coords at lat-lng from Wikidata format — transform_wikidata_coords","text":"data tibble coord_column name column coordinates formatted 'Point(..... ....)' prefix prefix appended \"lat-lng\" columns (defaults \"\" -prefix-)","code":""},{"path":"https://lvaudor.github.io/glitter/reference/transform_wikidata_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get coords at lat-lng from Wikidata format — transform_wikidata_coords","text":"","code":"if (FALSE) { query='SELECT ?item ?itemLabel ?coords ?date {   ?item wdt:P361 wd:Q1552;         wdt:P625 ?coords.   OPTIONAL{?item wdt:P1619 ?date.}   SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . } } ORDER BY ?itemLabel ' tib=send_sparql(query) transform_wikidata_coords(tib, \"coords\") }"},{"path":"https://lvaudor.github.io/glitter/reference/usual_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Usual endpoints: this dataset allows the user to refer to them using a simplified name rather than their full url. — usual_endpoints","title":"Usual endpoints: this dataset allows the user to refer to them using a simplified name rather than their full url. — usual_endpoints","text":"Usual endpoints: dataset allows user refer using simplified name rather full url.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/usual_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Usual endpoints: this dataset allows the user to refer to them using a simplified name rather than their full url. — usual_endpoints","text":"","code":"usual_endpoints"},{"path":"https://lvaudor.github.io/glitter/reference/usual_endpoints.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Usual endpoints: this dataset allows the user to refer to them using a simplified name rather than their full url. — usual_endpoints","text":"data frame usual SPARQL endpoints abbreviated names name abbreviated name SPARQL endpoint url full address SPARQL endpoint","code":""},{"path":"https://lvaudor.github.io/glitter/reference/usual_prefixes.html","id":null,"dir":"Reference","previous_headings":"","what":"Usual prefixes: this dataset allows the user to refer to usual prefixes in their queries without manually specifying the associated urls. — usual_prefixes","title":"Usual prefixes: this dataset allows the user to refer to usual prefixes in their queries without manually specifying the associated urls. — usual_prefixes","text":"Usual prefixes: dataset allows user refer usual prefixes queries without manually specifying associated urls.","code":""},{"path":"https://lvaudor.github.io/glitter/reference/usual_prefixes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Usual prefixes: this dataset allows the user to refer to usual prefixes in their queries without manually specifying the associated urls. — usual_prefixes","text":"","code":"usual_prefixes"},{"path":"https://lvaudor.github.io/glitter/reference/usual_prefixes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Usual prefixes: this dataset allows the user to refer to usual prefixes in their queries without manually specifying the associated urls. — usual_prefixes","text":"data frame usual prefixes type type prefix name prefix url corresponding ontology","code":""},{"path":"https://lvaudor.github.io/glitter/reference/wd_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Wikidata properties — wd_properties","title":"Wikidata properties — wd_properties","text":"Wikidata properties","code":""},{"path":"https://lvaudor.github.io/glitter/reference/wd_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wikidata properties — wd_properties","text":"","code":"wd_properties"},{"path":"https://lvaudor.github.io/glitter/reference/wd_properties.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wikidata properties — wd_properties","text":"data frame 8939 rows 5 variables: id id type property type label property label description property description altLabel alternative labels","code":""},{"path":"https://lvaudor.github.io/glitter/reference/wd_properties.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Wikidata properties — wd_properties","text":"Wikidata https://query.wikidata.org/#SELECT%20%3Fproperty%20%3FpropertyType%20%3FpropertyLabel%20%3FpropertyDescription%20%3FpropertyAltLabel%0AWHERE%20%7B%0A%20%20%3Fproperty%20wikibase%3ApropertyType%20%3FpropertyType.%0A%20%20SERVICE%20wikibase%3Alabel%20%7Bbd%3AserviceParam%20wikibase%3Alanguage%20%22%5BAUTO_LANGUAGE%5D%2Cen%22.%20%7D%0A%7D%0AORDER%20BY%20ASC%20%28xsd%3Ainteger%28STRAFTER%28STR%28%3Fproperty%29%2C%20%27P%27%29%29%29","code":""}]
