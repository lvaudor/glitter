% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spq_filter.R
\name{spq_filter}
\alias{spq_filter}
\title{Filters results by adding conditions}
\usage{
spq_filter(
  .query = NULL,
  ...,
  .label = NA,
  .within_box = c(NA, NA),
  .within_distance = c(NA, NA)
)
}
\arguments{
\item{.query}{a list with elements of the query}

\item{...}{variables by which to arrange
(or SPARQL strings escaped with \code{spq()}, or strings, see examples)}

\item{.label}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} See \code{\link[=spq_label]{spq_label()}}.}

\item{.within_box}{if provided, rectangular bounding box for the triple query.
Provided as list(southwest=c(long=...,lat=...),northeast=c(long=...,lat=...))}

\item{.within_distance}{if provided, circular bounding box for the triple query.
Provided as list(center=c(long=...,lat=...), radius=...),
with radius in kilometers.
The center can also be provided as a variable (for instance, "?location")
for the center coordinates to be retrieved directly from the query.}
}
\value{
A query object
}
\description{
Filters results by adding conditions
}
\section{Some examples}{


\if{html}{\out{<div class="sourceCode r">}}\preformatted{spq_init() \%>\%
spq_filter(item == wdt::P31(wd::Q13442814))

# Lexemes in English that match an expression
# here starting with "pota"
query <- spq_init() |>
  spq_prefix(prefixes = c(dct = "http://purl.org/dc/terms/")) |>
  spq_add(spq('?lexemeId dct:language wd:Q1860')) |>
  spq_mutate(lemma = wikibase::lemma(lexemeId)) |>
  spq_filter(str_detect(lemma, '^pota.*')) |>
  spq_select(lexemeId, lemma)
}\if{html}{\out{</div>}}
}

