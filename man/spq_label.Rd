% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spq_label.R
\name{spq_label}
\alias{spq_label}
\title{Label variables}
\usage{
spq_label(
  .query,
  ...,
  .required = FALSE,
  .languages = getOption("glitter.lang", "en$"),
  .overwrite = FALSE
)
}
\arguments{
\item{.query}{a list with elements of the query}

\item{...}{variables by which to arrange
(or SPARQL strings escaped with \code{spq()}, or strings, see examples)}

\item{.required}{whether the existence of a value for the triple is required or not (defaults to TRUE).
If set to FALSE, then other triples in the query are returned even if this particular triple is missing)}

\item{.languages}{Languages for which to query labels. Use \code{NULL} for removing
restrictions on language (defined or not), \code{"*"} for any defined language.
If you write "en" you
can get labels for regional variants such as "en-GB". If you want results for
"en" only, write "en$".}

\item{.overwrite}{whether to replace variables with their labels.
\code{spq_select(blop)} means you get both \code{blop} and \code{blop_label}.
\code{spq_select(blop, .overwrite = TRUE)} means you get the label as \code{blop},
the "original" blop variable isn't returned.}
}
\value{
A query object
}
\description{
Label variables
}
\section{Example}{


\if{html}{\out{<div class="sourceCode r">}}\preformatted{spq_init() \%>\%
  spq_add("?mayor wdt:P31 ?species") \%>\%
# dog, cat or chicken
  spq_set(species = c('wd:Q144','wd:Q146', 'wd:Q780')) \%>\%
# who occupy the function
  spq_add("?mayor p:P39 ?node") \%>\%
# of mayor
  spq_add("?node ps:P39 wd:Q30185") \%>\%
# of some places
  spq_add("?node pq:P642 ?place") \%>\%
  spq_label(mayor, place, .languages = c("fr", "en", "de")) \%>\%
  spq_perform()
}\if{html}{\out{</div>}}
}

