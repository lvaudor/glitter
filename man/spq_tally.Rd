% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spq_tally.R
\name{spq_tally}
\alias{spq_tally}
\alias{spq_count}
\title{Count the observations}
\usage{
spq_tally(.query, sort = FALSE, name = "n")

spq_count(.query, ..., sort = FALSE, name = "n")
}
\arguments{
\item{.query}{a list with elements of the query}

\item{sort}{If \code{TRUE}, will show the largest groups at the top.
(like the \code{sort} argument of \code{dplyr::tally()})}

\item{name}{Name for the count column (like the \code{name} argument
of \code{dplyr::tally()})}

\item{...}{variables by which to arrange
(or SPARQL strings escaped with \code{spq()}, or strings, see examples)}
}
\value{
A query object
}
\description{
These functions are inspired by \code{dplyr::count()} and \code{dplyr::tally()}.
\code{spq_tally()} assumes you've already done the grouping.
}
\examples{
\dontrun{
spq_init() \%>\%
spq_add("?film wdt:P31 wd:Q11424") \%>\%
spq_mutate(narrative_location = wdt::P840(film)) \%>\%
spq_label(narrative_location) \%>\%
spq_tally(name = "n_films") \%>\%
spq_perform()

# the same with spq_count

spq_init() \%>\%
spq_add("?film wdt:P31 wd:Q11424") \%>\%
spq_mutate(narrative_location = wdt::P840(film)) \%>\%
spq_label(narrative_location) \%>\%
spq_count(name = "n_films") \%>\%
spq_perform()

# Now with grouping
spq_init() \%>\%
spq_add("?film wdt:P31 wd:Q11424") \%>\%
spq_mutate(narrative_location = wdt::P840(film)) \%>\%
spq_label(film, narrative_location) \%>\%
spq_group_by(narrative_location_label) \%>\%
spq_tally(sort = TRUE, name = "n_films") \%>\%
spq_perform()


# More direct with spq_count()
spq_init() \%>\%
spq_add("?film wdt:P31 wd:Q11424") \%>\%
spq_mutate(narrative_location = wdt::P840(film)) \%>\%
spq_label(film, narrative_location) \%>\%
spq_count(narrative_location_label, sort = TRUE, name = "n_films") \%>\%
spq_perform()
}
}
